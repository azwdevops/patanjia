{"version":3,"sources":["shared/PrivateRoute.js","shared/scripts.js","shared/sharedFunctions.js","components/common/MinDialog.js","redux/actions/types.js","redux/actions/shared.js","redux/actions/auth.js","components/users/Login.js","components/common/MediumDialog.js","components/users/Signup.js","components/users/ForgotPassword.js","components/users/ReactivateAccount.js","components/common/Header/Header.js","pages/Valuer/SearchTitle/SearchTitle.js","pages/Home/Home.js","components/common/Sidebar/Links/StaffLinks.js","components/common/Sidebar/Links/ValuerLinks.js","components/common/Sidebar/Sidebar.js","pages/Dashboard/Dashboard.js","pages/ActivateAccount/ActivateAccount.js","pages/ResetPasswordConfirm.js","pages/NotFound/NotFound.js","components/users/ChangePassword.js","pages/Profile/Profile.js","pages/Staff/MaintainTitles/components/AddTitle.js","redux/actions/search.js","pages/Staff/MaintainTitles/MaintainTitles.js","App.js","reportWebVitals.js","redux/reducers/auth.js","redux/reducers/shared.js","redux/utility.js","redux/reducers/search.js","redux/reducers/index.js","redux/store.js","index.js","shared/axios.js","api/index.js","api/postapi.js","api/patchapi.js","api/getapi.js","shared/globals.js"],"names":["PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","showNavbar","nav","document","getElementById","bodypd","classList","toggle","ifEmpty","object","i","resetFormValues","MinDialog","Dialog","open","isOpen","style","maxWidth","minWidth","margin","fullWidth","children","OPEN_SIGNUP","CLOSE_SIGNUP","OPEN_LOGIN","CLOSE_LOGIN","AUTH_SUCCESS","LOGOUT","OPEN_FORGOT_PASSWORD","CLOSE_FORGOT_PASSWORD","OPEN_RESEND_ACTIVATION","CLOSE_RESEND_ACTIVATION","OPEN_PASSWORD_RESET_CONFIRM","CLOSE_PASSWORD_RESET_CONFIRM","OPEN_CHANGE_PASSWORD","CLOSE_CHANGE_PASSWORD","SET_ALERT","REMOVE_ALERT","START_LOADING","STOP_LOADING","NEW_TITLE","SET_TITLES","setAlert","alertType","detail","dispatch","a","type","payload","status","setTimeout","showError","err","response","window","alert","data","stopLoading","error","globals","success","unknown_error","get_user","api","then","res","actionTypes","user","catch","clear","logout","history","replace","connect","state","loading","shared","loginForm","auth","startLoading","newAlert","loginUser","loginData","resetForm","setItem","access","console","log","finally","login","closeLogin","openPasswordReset","openSignup","openResendActivation","useState","email","password","setLoginData","handleChange","e","target","name","value","className","id","htmlFor","onChange","CircularProgress","position","marginLeft","onClick","preventDefault","justifySelf","MediumDialog","signupForm","closeSignup","signupUser","newUser","signup_user","first_name","last_name","username","confirm_password","setNewUser","fillFields","required","forgotPasswordForm","resetPassword","reset_password","closeForgotPassword","setEmail","trim","resendActivationForm","closeResendActivation","resendActivation","resend_activation","Header","useDispatch","useHistory","session_cookie","useSelector","userImage","Avatar","alt","src","charAt","userId","titleNumber","setTitleNumber","title","lat","lon","searchedTitle","setSearchedTitle","handleSubmit","API","post","title_data","onSubmit","width","height","frameBorder","allowFullScreen","Home","StaffLinks","Link","pathname","ValuerLinks","loggedIn","profile_type","logoutUser","useLocation","class","includes","Dashboard","activateUser","activation_token","body","useParams","resetPasswordConfirmForm","setNewPassword","newPasswords","password_token","set_password","openNewPassword","closeNewPassword","new_password","setNewPasswords","NotFound","changePasswordForm","changeUserPassword","passwords","change_password","closeChangePassword","current_password","confirm_new_password","setPasswords","bio","updateUser","updatedUser","update_user","openChangePassword","setUpdatedUser","useEffect","addNewTitle","new_title","add_new_title","openAddTitle","setOpenAddTitle","titleDetails","setTitleDetails","titlesList","search","getAllTitles","titles_data","get_all_titles","length","map","getUser","exact","path","ResetPasswordConfirm","ActivateAccount","MaintainTitles","Profile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","action","sharedInitialState","sharedReducer","updateObject","oldObject","updatedProperties","gettAllTitles","searchReducer","combineReducers","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","URL","liveProduction","testProduction","devHome","testHome","productionHome","axios","create","baseURL","interceptors","request","use","req","headers","Authorization","Accept","activateAccount","signIn","setPassword","changePassword","patch","get","dev"],"mappings":"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","file":"static/js/main.85cd15f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      localStorage.getItem(\"session_cookie\") ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","// toggle sidebar on menu button click\r\nexport const showNavbar = () => {\r\n  // const toggle = document.getElementById(\"header-toggle\")\r\n  const nav = document.getElementById(\"nav-bar\"),\r\n    bodypd = document.getElementById(\"body-pd\");\r\n  // headerpd = document.getElementById(\"header\");\r\n\r\n  // show navbar\r\n  nav.classList.toggle(\"show\");\r\n\r\n  // change icon\r\n  // toggle.classList.toggle(\"bx-x\");\r\n\r\n  // add padding to body\r\n  bodypd.classList.toggle(\"body-pd\");\r\n\r\n  // add padding to header\r\n  //   headerpd.classList.toggle(\"body-pd\");\r\n};\r\n","// check if any field in an object is empty\r\nexport const ifEmpty = (object) => {\r\n  for (const i in object) {\r\n    if (`${object[i]}` === \"\") {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n// function to reset form values to blank\r\nexport const resetFormValues = (object) => {\r\n  for (const i in object) {\r\n    object[i] = \"\";\r\n  }\r\n};\r\n\r\n// function to get max date to display on user entry form\r\nexport const maxDate = () => {\r\n  const today = new Date();\r\n  const day = today.getDate() < 10 ? \"0\" + today.getDate() : today.getDate();\r\n  const month =\r\n    today.getMonth() + 1 < 10\r\n      ? \"0\" + (today.getMonth() + 1)\r\n      : today.getMonth() + 1;\r\n  const max_date = today.getFullYear() + \"-\" + month + \"-\" + day;\r\n  return max_date;\r\n};\r\n\r\n// function to get min date to display on exam date\r\nexport const minDate = () => {\r\n  const today = new Date();\r\n  const day = today.getDate() < 10 ? \"0\" + today.getDate() : today.getDate();\r\n  const month =\r\n    today.getMonth() + 1 < 10\r\n      ? \"0\" + (today.getMonth() + 1)\r\n      : today.getMonth() + 1;\r\n  const min_date = today.getFullYear() + \"-\" + month + \"-\" + day;\r\n  return min_date;\r\n};\r\n","// material ui items\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst MinDialog = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      style={{ maxWidth: \"500px\", minWidth: \"\", margin: \"0 auto\" }}\r\n      fullWidth\r\n    >\r\n      {props.children}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MinDialog;\r\n","// user types\r\nexport const OPEN_SIGNUP = \"OPEN_SIGNUP\";\r\nexport const CLOSE_SIGNUP = \"CLOSE_SIGNUP\";\r\nexport const OPEN_LOGIN = \"OPEN_LOGIN\";\r\nexport const CLOSE_LOGIN = \"CLOSE_LOGIN\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const OPEN_FORGOT_PASSWORD = \"OPEN_FORGOT_PASSWORD\";\r\nexport const CLOSE_FORGOT_PASSWORD = \"CLOSE_FORGOT_PASSWORD\";\r\nexport const OPEN_RESEND_ACTIVATION = \"OPEN_RESEND_ACTIVATION\";\r\nexport const CLOSE_RESEND_ACTIVATION = \"CLOSE_RESEND_ACTIVATION\";\r\nexport const OPEN_PASSWORD_RESET_CONFIRM = \"OPEN_PASSWORD_RESET_CONFIRM\";\r\nexport const CLOSE_PASSWORD_RESET_CONFIRM = \"CLOSE_PASSWORD_RESET_CONFIRM\";\r\nexport const OPEN_CHANGE_PASSWORD = \"OPEN_CHANGE_PASSWORD\";\r\nexport const CLOSE_CHANGE_PASSWORD = \"CLOSE_CHANGE_PASSWORD\";\r\n\r\n// shared types\r\nexport const SET_ALERT = \"SET_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const START_LOADING = \"START_LOADING\";\r\nexport const STOP_LOADING = \"STOP_LOADING\";\r\n\r\n// title types\r\nexport const NEW_TITLE = \"NEW_TITLE\";\r\nexport const SET_TITLES = \"SET_TITLES\";\r\n","import { SET_ALERT, REMOVE_ALERT, STOP_LOADING } from \"./types\";\r\n\r\nexport const setAlert = (alertType, detail) => async (dispatch) => {\r\n  // set alert\r\n  // alertType is either success or error\r\n  // detail is the message\r\n  dispatch({ type: SET_ALERT, payload: { status: true, alertType, detail } });\r\n\r\n  // remove alert after 3 seconds\r\n  setTimeout(() => {\r\n    dispatch({\r\n      type: REMOVE_ALERT,\r\n      payload: { status: false, alertType: \"\", detail: \"\" },\r\n    });\r\n  }, 3000);\r\n};\r\n\r\n// START OF reusable functions\r\n// show error function\r\nexport const showError = (err) => {\r\n  if (\r\n    err?.response?.status === 400 ||\r\n    err?.response?.status === 401 ||\r\n    err?.response?.status === 403\r\n  ) {\r\n    window.alert(err?.response?.data?.detail);\r\n  } else if (err?.response?.status === 413) {\r\n    window.alert(\"File is too large, a maximum of 95MB allowed.\");\r\n  } else {\r\n    window.alert(\"An unknown error occurred\");\r\n  }\r\n};\r\nexport const stopLoading = (dispatch) => {\r\n  dispatch({ type: STOP_LOADING });\r\n};\r\n","// axios items\r\nimport * as api from \"../../api/index\";\r\n\r\n// redux API items\r\n\r\nimport * as actionTypes from \"../actions/types\";\r\nimport { setAlert } from \"./shared\";\r\n\r\n// shared items\r\nimport globals from \"../../shared/globals\";\r\n\r\nconst { error, success, unknown_error } = globals;\r\n\r\n// sign up user\r\nexport const signup_user = (newUser, resetForm) => async (dispatch) => {\r\n  await api\r\n    .signupUser(newUser)\r\n    .then((res) => {\r\n      window.alert(res.data?.detail);\r\n      resetForm();\r\n    })\r\n    .catch((err) => {\r\n      // if bad client request\r\n      if (err.response?.status === 400) {\r\n        window.alert(err.response.data?.detail);\r\n      } else {\r\n        window.alert(unknown_error);\r\n      }\r\n    })\r\n    .finally(() => {\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n    });\r\n};\r\n\r\n// activate user account\r\nexport const activate_account = (body) => async (dispatch) => {\r\n  const { activation_token, history } = body;\r\n  await api\r\n    .activateAccount(activation_token)\r\n    .then((res) => {\r\n      alert(res.data?.detail);\r\n      dispatch({ type: actionTypes.OPEN_LOGIN });\r\n    })\r\n    .catch((err) => {\r\n      if (err.response.status === 400) {\r\n        alert(err.response.data?.detail);\r\n        // if token has expired or is invalid, open this form for user to request a new token\r\n        dispatch({ type: actionTypes.OPEN_RESEND_ACTIVATION });\r\n      } else {\r\n        alert(unknown_error);\r\n      }\r\n    })\r\n    .finally(() => {\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n      history.replace(\"/\");\r\n    });\r\n};\r\n\r\n// resend user account activation link\r\nexport const resend_activation = (email, resetForm) => async (dispatch) => {\r\n  await api\r\n    .resendActivation(email)\r\n    .then((res) => {\r\n      dispatch(setAlert(success, \"Activation link sent to email.\"));\r\n      resetForm();\r\n    })\r\n    .catch((err) => {\r\n      // if bad client request\r\n      if (err.response?.status === 400) {\r\n        dispatch(setAlert(error, err.response.data?.detail));\r\n      } else {\r\n        dispatch(setAlert(error, \"An error occurred, please try again later\"));\r\n      }\r\n    })\r\n    .finally(() => {\r\n      // dispatch the stop loading action\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n    });\r\n};\r\n\r\n// login user\r\nexport const login = (loginData, resetForm) => async (dispatch) => {\r\n  await api\r\n    .signIn(loginData)\r\n    .then((res) => {\r\n      localStorage.setItem(\"session_cookie\", res.data?.access);\r\n      resetForm();\r\n      // dispatch success message\r\n      dispatch({ type: actionTypes.CLOSE_LOGIN });\r\n      // get user details\r\n      dispatch(get_user());\r\n    })\r\n    .catch((err) => {\r\n      if (err.response?.status === 400) {\r\n        dispatch(setAlert(error, err.response.data?.detail));\r\n      } else if (err.response?.status === 401) {\r\n        dispatch(\r\n          setAlert(error, \"Invalid login, ensure your account is activated\")\r\n        );\r\n      } else {\r\n        console.log(err);\r\n      }\r\n    })\r\n    .finally(() => {\r\n      // dispatch the stop loading action\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n    });\r\n};\r\n\r\n// reset user password by sending an email with a reset link\r\nexport const reset_password = (email, resetForm) => async (dispatch) => {\r\n  await api\r\n    .resetPassword(email)\r\n    .then((res) => {\r\n      dispatch(setAlert(success, res.data?.detail));\r\n      resetForm();\r\n    })\r\n    .catch((err) => {\r\n      if (err.response?.status === 400) {\r\n        dispatch(setAlert(error, err.response.data?.detail));\r\n      } else {\r\n        dispatch(setAlert(error, unknown_error));\r\n      }\r\n    })\r\n    .finally(() => {\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n    });\r\n};\r\n\r\n// set new user password\r\nexport const set_password =\r\n  (newPasswords, password_token, history) => async (dispatch) => {\r\n    await api\r\n      .setPassword(newPasswords, password_token)\r\n      .then((res) => {\r\n        alert(res.data?.detail);\r\n        dispatch({ type: actionTypes.CLOSE_PASSWORD_RESET_CONFIRM });\r\n        history.replace(\"/\");\r\n        dispatch({ type: actionTypes.OPEN_LOGIN });\r\n      })\r\n      .catch((err) => {\r\n        if (err.response?.status === 400) {\r\n          dispatch(setAlert(error, err.response.data?.detail));\r\n        } else {\r\n          dispatch(setAlert(error, unknown_error));\r\n        }\r\n      })\r\n      .finally(() => {\r\n        dispatch({ type: actionTypes.STOP_LOADING });\r\n      });\r\n  };\r\n\r\n// patch/update user data\r\nexport const update_user = (updatedUser, userId) => async (dispatch) => {\r\n  await api\r\n    .updateUser(updatedUser, userId)\r\n    .then((res) => {\r\n      dispatch({ type: actionTypes.AUTH_SUCCESS, payload: res.data?.user });\r\n      alert(res.data?.detail);\r\n    })\r\n    .catch((err) => {\r\n      if (err.response?.status === 400) {\r\n        alert(err.response.data?.detail);\r\n      } else {\r\n        alert(unknown_error);\r\n      }\r\n    })\r\n    .finally(() => {\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n    });\r\n};\r\n\r\n// user change password\r\nexport const change_password =\r\n  (passwords, userId, history) => async (dispatch) => {\r\n    await api\r\n      .changePassword(passwords, userId)\r\n      .then((res) => {\r\n        alert(success, res.data?.detail);\r\n        dispatch({ type: actionTypes.CLOSE_CHANGE_PASSWORD });\r\n        dispatch(logout(history));\r\n        dispatch({ type: actionTypes.OPEN_LOGIN });\r\n      })\r\n      .catch((err) => {\r\n        if (err.response?.status === 400) {\r\n          dispatch(setAlert(error, err.response.data?.detail));\r\n        } else {\r\n          dispatch(setAlert(error, unknown_error));\r\n        }\r\n      })\r\n      .finally(() => {\r\n        dispatch({ type: actionTypes.STOP_LOADING });\r\n      });\r\n  };\r\n\r\n// get user data\r\nexport const get_user = () => async (dispatch) => {\r\n  await api\r\n    .getUser()\r\n    .then((res) => {\r\n      dispatch({ type: actionTypes.AUTH_SUCCESS, payload: res.data?.user });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: actionTypes.LOGOUT });\r\n      localStorage.clear();\r\n    });\r\n};\r\n\r\n// logout user\r\nexport const logout = (history) => async (dispatch) => {\r\n  localStorage.clear();\r\n  dispatch({ type: actionTypes.LOGOUT });\r\n  history.replace(\"/\");\r\n};\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\nimport { ifEmpty, resetFormValues } from \"../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport MinDialog from \"../common/MinDialog\";\r\n\r\n// import redux API\r\nimport {\r\n  CLOSE_LOGIN,\r\n  OPEN_FORGOT_PASSWORD,\r\n  OPEN_RESEND_ACTIVATION,\r\n  OPEN_SIGNUP,\r\n  START_LOADING,\r\n} from \"../../redux/actions/types\";\r\nimport { setAlert } from \"../../redux/actions/shared\";\r\nimport { login } from \"../../redux/actions/auth\";\r\n\r\nconst Login = (props) => {\r\n  const { loading, alert, loginForm } = props; // extract state from props\r\n  const {\r\n    startLoading,\r\n    newAlert,\r\n    loginUser,\r\n    closeLogin,\r\n    openPasswordReset,\r\n    openSignup,\r\n    openResendActivation,\r\n  } = props; // extract dispatch action from props\r\n  const [loginData, setLoginData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  // destructuring\r\n  const { error } = globals;\r\n  const { email, password } = loginData;\r\n\r\n  // reset form values\r\n  const resetForm = () => {\r\n    resetFormValues(loginData);\r\n  };\r\n\r\n  // function to close login form\r\n  const closeLoginForm = () => {\r\n    closeLogin();\r\n    resetForm();\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(loginData)) {\r\n      return newAlert(error, \"Email and password required\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    loginUser(loginData, resetForm);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setLoginData({ ...loginData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // open password reset form\r\n  const openPasswordResetForm = () => {\r\n    openPasswordReset();\r\n    closeLogin();\r\n  };\r\n\r\n  //open sign up form\r\n  const openSignupForm = () => {\r\n    openSignup();\r\n    closeLogin();\r\n  };\r\n  // open resend activation\r\n  const openResendActivationForm = () => {\r\n    openResendActivation();\r\n    closeLogin();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MinDialog isOpen={loginForm}>\r\n        <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n          <h3>Login here</h3>\r\n          <p className={`response__message ${alert.alertType}`}>\r\n            {alert.status && alert.detail}\r\n          </p>\r\n          <div className=\"dialog__rowSingleItem\">\r\n            <label htmlFor=\"\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              value={email}\r\n            />\r\n          </div>\r\n          {loading && (\r\n            <CircularProgress\r\n              style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n            />\r\n          )}\r\n          <div className=\"dialog__rowSingleItem\">\r\n            <label htmlFor=\"\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              value={password}\r\n            />\r\n          </div>\r\n          <div className=\"form__Buttons\">\r\n            <button type=\"button\" onClick={closeLoginForm}>\r\n              Close\r\n            </button>\r\n            <button type=\"submit\" onClick={handleLogin}>\r\n              Login\r\n            </button>\r\n          </div>\r\n          <div className=\"extra__formButtons\">\r\n            <label\r\n              htmlFor=\"\"\r\n              className=\"button\"\r\n              onClick={openPasswordResetForm}\r\n            >\r\n              Forgot Password\r\n            </label>\r\n            <label\r\n              htmlFor=\"\"\r\n              className=\"button\"\r\n              style={{ justifySelf: \"end\" }}\r\n              onClick={openSignupForm}\r\n            >\r\n              Create Account\r\n            </label>\r\n          </div>\r\n          <div className=\"extra__formButtons\">\r\n            <label\r\n              htmlFor=\"\"\r\n              className=\"button\"\r\n              onClick={openResendActivationForm}\r\n            >\r\n              Resend Activation\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </MinDialog>\r\n      {/* components */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    loginForm: state.auth.loginForm,\r\n    alert: state.shared.alert,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    newAlert: (type, detail) => dispatch(setAlert(type, detail)),\r\n    loginUser: (loginData, resetForm) => dispatch(login(loginData, resetForm)),\r\n    closeLogin: () => dispatch({ type: CLOSE_LOGIN }),\r\n    openPasswordReset: () => dispatch({ type: OPEN_FORGOT_PASSWORD }),\r\n    openSignup: () => dispatch({ type: OPEN_SIGNUP }),\r\n    openResendActivation: () => dispatch({ type: OPEN_RESEND_ACTIVATION }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","// material ui items\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst MediumDialog = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      maxWidth=\"md\"\r\n      style={{ maxWidth: props?.maxWidth, margin: \"auto\" }}\r\n      fullWidth\r\n    >\r\n      {props.children}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MediumDialog;\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\nimport { ifEmpty, resetFormValues } from \"../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport MediumDialog from \"../common/MediumDialog\";\r\n// import redux API\r\nimport { CLOSE_SIGNUP, START_LOADING } from \"../../redux/actions/types\";\r\nimport { signup_user } from \"../../redux/actions/auth\";\r\nimport { setAlert } from \"../../redux/actions/shared\";\r\n\r\nconst Signup = (props) => {\r\n  const { loading, signupForm } = props; // get state from props\r\n  const { startLoading, closeSignup, newAlert, signupUser } = props; // get dispatch actions from props\r\n\r\n  // internal state\r\n  const [newUser, setNewUser] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  //############### destructuring code ###################//\r\n  const { first_name, last_name, username, email, password, confirm_password } =\r\n    newUser;\r\n  const { error, fillFields } = globals;\r\n\r\n  //#################end of destructuring ###########//\r\n\r\n  const resetForm = () => {\r\n    resetFormValues(newUser);\r\n  };\r\n\r\n  const closeSignupForm = () => {\r\n    closeSignup();\r\n    resetForm();\r\n  };\r\n\r\n  const handleSignup = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(newUser)) {\r\n      return newAlert(error, fillFields);\r\n    }\r\n    // confirm passwords match\r\n    if (password !== confirm_password) {\r\n      return newAlert(error, \"Passwords should match\");\r\n    }\r\n\r\n    // dispatch the loading action\r\n    startLoading();\r\n\r\n    // call the signup action creator\r\n    signupUser(newUser, resetForm);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setNewUser({ ...newUser, [e.target.name]: e.target.value });\r\n  };\r\n  return (\r\n    <MediumDialog isOpen={signupForm}>\r\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n        <h3>Create new account</h3>\r\n\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"first_name\"\r\n              value={first_name}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"last_name\"\r\n              value={last_name}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n        </div>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"43%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              username={email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirm_password\"\r\n              value={confirm_password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={closeSignupForm}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={handleSignup}>\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n        <div className=\"extra__formButtons\"></div>\r\n      </form>\r\n    </MediumDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    signupForm: state.auth.signupForm,\r\n    alert: state.shared?.alert,\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    closeSignup: () => dispatch({ type: CLOSE_SIGNUP }),\r\n    newAlert: (type, detail) => dispatch(setAlert(type, detail)),\r\n    signupUser: (newUser, resetForm) =>\r\n      dispatch(signup_user(newUser, resetForm)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\n\r\n// import components/pages\r\nimport MinDialog from \"../common/MinDialog\";\r\n\r\n// import redux API\r\nimport {\r\n  CLOSE_FORGOT_PASSWORD,\r\n  START_LOADING,\r\n} from \"../../redux/actions/types\";\r\nimport { setAlert } from \"../../redux/actions/shared\";\r\nimport { reset_password } from \"../../redux/actions/auth\";\r\n\r\nconst ForgotPassword = (props) => {\r\n  const { loading, alert, forgotPasswordForm } = props; // extract state from props\r\n  const { startLoading, newAlert, resetPassword, closeForgotPassword } = props; // extract dispatch actions from props\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  //############### destructuring code ###################//\r\n  const { error } = globals;\r\n\r\n  //#################end of destructuring ###########//\r\n\r\n  const resetForm = () => {\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const closeForgotPasswordForm = () => {\r\n    closeForgotPassword();\r\n    resetForm();\r\n  };\r\n\r\n  // function to reset password (send reset password email)\r\n\r\n  const sendPasswordResetEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (email.trim() === \"\") {\r\n      return newAlert(error, \"Email required\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    resetPassword(email, resetForm);\r\n  };\r\n\r\n  return (\r\n    <MinDialog isOpen={forgotPasswordForm}>\r\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n        <h3>Enter your email to reset password</h3>\r\n        <p className={`response__message ${alert.alertType}`}>\r\n          {alert.status && alert.detail}\r\n        </p>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={closeForgotPasswordForm}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={sendPasswordResetEmail}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </MinDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    alert: state.shared?.alert,\r\n    forgotPasswordForm: state.auth?.forgotPasswordForm,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    newAlert: (type, detail) => dispatch(setAlert(type, detail)),\r\n    resetPassword: (email, resetForm) =>\r\n      dispatch(reset_password(email, resetForm)),\r\n    closeForgotPassword: () => dispatch({ type: CLOSE_FORGOT_PASSWORD }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\n// import components/pages\r\nimport MinDialog from \"../common/MinDialog\";\r\n\r\n// import redux API\r\n\r\nimport {\r\n  CLOSE_RESEND_ACTIVATION,\r\n  START_LOADING,\r\n} from \"../../redux/actions/types\";\r\nimport { resend_activation } from \"../../redux/actions/auth\";\r\nimport { setAlert } from \"../../redux/actions/shared\";\r\n\r\nconst ReactivateAccount = (props) => {\r\n  const { loading, alert, resendActivationForm } = props; // extract state from props\r\n  const {\r\n    startLoading,\r\n    newAlert,\r\n    closeResendActivation,\r\n    resendActivation,\r\n  } = props; // extract dispatch actions from props\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  // ###################### destructuring to make code organized ######################### //\r\n  const { error } = globals;\r\n  // ###################### end destructuring to make code organized ######################### //\r\n\r\n  const resetForm = () => {\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const closeResendActivationForm = () => {\r\n    closeResendActivation();\r\n    resetForm();\r\n  };\r\n\r\n  // function to resend confirmation link\r\n  const resendAccountConfirmationLink = (e) => {\r\n    e.preventDefault();\r\n    if (email.trim() === \"\") {\r\n      return newAlert(error, \"Email required\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    resendActivation(email, resetForm);\r\n  };\r\n\r\n  return (\r\n    <MinDialog\r\n      isOpen={resendActivationForm} // since the styles of min width applied globally is affecting the reactivate form width, apply inline styles\r\n    >\r\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n        <h3>Enter email to resend confirmation link</h3>\r\n        <p className={`response__message ${alert.alertType}`}>\r\n          {alert.status && alert.detail}\r\n        </p>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={closeResendActivationForm}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={resendAccountConfirmationLink}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </MinDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    alert: state.shared?.alert,\r\n    resendActivationForm: state.auth?.resendActivationForm,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    newAlert: (type, detail) => dispatch(setAlert(type, detail)),\r\n    closeResendActivation: () => dispatch({ type: CLOSE_RESEND_ACTIVATION }),\r\n    resendActivation: (email, resetForm) =>\r\n      dispatch(resend_activation(email, resetForm)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReactivateAccount);\r\n","// import installed packages\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n// import styles\r\n\r\nimport \"./Header.css\";\r\n// import material ui items\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n// import shared/global items\r\nimport { showNavbar } from \"../../../shared/scripts\";\r\n// import components/pages\r\nimport Login from \"../../users/Login\";\r\nimport Signup from \"../../users/Signup\";\r\nimport ForgotPassword from \"../../users/ForgotPassword\";\r\nimport ReactivateAccount from \"../../users/ReactivateAccount\";\r\n\r\n// import redux API\r\nimport { OPEN_LOGIN, OPEN_SIGNUP } from \"../../../redux/actions/types\";\r\nimport { logout } from \"../../../redux/actions/auth\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const session_cookie = localStorage.getItem(\"session_cookie\");\r\n  const username = useSelector((state) => state.auth.user?.username);\r\n  const userImage = useSelector((state) => state.auth?.userImage);\r\n\r\n  // console.log(location.pathname);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\" id=\"header\">\r\n        <div className=\"header__toggle\">\r\n          <i className=\"bx bx-menu\" id=\"header-toggle\" onClick={showNavbar}></i>\r\n          <h1>\r\n            <Link to=\"/\">Pata Njia</Link>\r\n          </h1>\r\n        </div>\r\n\r\n        {session_cookie ? (\r\n          <div className=\"header__right authenticated\">\r\n            <>\r\n              <div>\r\n                <Avatar alt={username} src={userImage} className=\"user__image\">\r\n                  {username?.charAt(0)}\r\n                </Avatar>\r\n                <h6>{username}</h6>\r\n                <i className=\"bx bx-caret-down\"></i>\r\n              </div>\r\n              <ul className=\"dropdown\">\r\n                <li>\r\n                  <Link to=\"/dashboard/\">Dashboard</Link>\r\n                </li>\r\n                <li onClick={() => dispatch(logout(history))}>Logout</li>\r\n              </ul>\r\n            </>\r\n          </div>\r\n        ) : (\r\n          <div className=\"header__right\">\r\n            <span\r\n              className=\"button\"\r\n              onClick={() => dispatch({ type: OPEN_LOGIN })}\r\n            >\r\n              Login\r\n            </span>\r\n            <span\r\n              className=\"button\"\r\n              onClick={() => dispatch({ type: OPEN_SIGNUP })}\r\n            >\r\n              Signup\r\n            </span>\r\n          </div>\r\n        )}\r\n      </header>\r\n      {/* components */}\r\n      <Login />\r\n      <Signup />\r\n      <ForgotPassword />\r\n      <ReactivateAccount />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// import installed packages\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\nimport \"./SearchTitle.css\";\r\n// import material ui items\r\nimport CirculaProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport API from \"../../../shared/axios\";\r\n// import components/pages\r\n// import redux API\r\nimport { START_LOADING, STOP_LOADING } from \"../../../redux/actions/types\";\r\nimport { showError } from \"../../../redux/actions/shared\";\r\n\r\nconst SearchTitle = (props) => {\r\n  const { startLoading, loading, userId, stopLoading } = props;\r\n  const [titleNumber, setTitleNumber] = useState(\"\");\r\n  const [searchedTitle, setSearchedTitle] = useState({\r\n    title: \"\",\r\n    lat: \"\",\r\n    lon: \"\",\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (titleNumber.trim() === \"\") {\r\n      return window.alert(\"Input valid title number\");\r\n    }\r\n    startLoading();\r\n    await API.post(`/api/search/valuer-get-title/${userId}/`, { titleNumber })\r\n      .then((res) => {\r\n        setSearchedTitle(res.data?.title_data);\r\n      })\r\n      .catch((err) => showError(err))\r\n      .finally(() => stopLoading());\r\n  };\r\n\r\n  return (\r\n    <div className=\"table__parent\" id={loading ? \"pageSubmitting\" : \"\"}>\r\n      <div className=\"table__parentHeader\">\r\n        <h3>Enter title number</h3>\r\n        {loading && <CirculaProgress style={{ position: \"absolute\" }} />}\r\n        <br />\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"\"\r\n            className=\"search__input\"\r\n            onChange={(e) => setTitleNumber(e.target.value)}\r\n            value={titleNumber}\r\n          />\r\n          <br />\r\n          <button type=\"submit\" className=\"add__button search__button\">\r\n            Search\r\n          </button>\r\n        </form>\r\n        <br />\r\n        {searchedTitle?.title !== \"\" && (\r\n          <>\r\n            <iframe\r\n              title={searchedTitle?.title}\r\n              src={`https://maps.google.com/maps?q=${searchedTitle?.lat}, ${searchedTitle?.lon}&z=15&output=embed`}\r\n              width=\"1000\"\r\n              height=\"500\"\r\n              frameBorder=\"0\"\r\n              className=\"map__iframe\"\r\n              allowFullScreen\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth?.user?.id,\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    stopLoading: () => dispatch({ type: STOP_LOADING }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchTitle);\r\n","import SearchTitle from \"../Valuer/SearchTitle/SearchTitle\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <SearchTitle />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","// import installed packages\r\n// import styles\r\n\r\n// import material ui items\r\n\r\n// import shared/global items\r\n\r\n// import components/pages\r\n\r\n// import redux API\r\n\r\nconst StaffLinks = ({ Link, pathname }) => {\r\n  return (\r\n    <>\r\n      <Link\r\n        to=\"/staff/maintain-titles/\"\r\n        className={\r\n          `${pathname}` === \"/staff/maintain-titles/\"\r\n            ? \"nav__link active\"\r\n            : \"nav__link\"\r\n        }\r\n      >\r\n        <i className=\"bx bxs-landscape\"></i>\r\n        <span className=\"nav__name\">Titles</span>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffLinks;\r\n","// import installed packages\r\n// import styles\r\n\r\n// import material ui items\r\n\r\n// import shared/global items\r\n\r\n// import components/pages\r\n\r\n// import redux API\r\n\r\nconst ValuerLinks = ({ Link, pathname }) => {\r\n  return (\r\n    <>\r\n      {/* <Link\r\n        to=\"/valuer/search-title/\"\r\n        className={\r\n          `${pathname}` === \"/valuer/search-title/\"\r\n            ? \"nav__link active\"\r\n            : \"nav__link\"\r\n        }\r\n      >\r\n        <i className=\"bx bx-search\"></i>\r\n        <span className=\"nav__name\">Search</span>\r\n      </Link> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ValuerLinks;\r\n","// import installed packages\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import styles\r\nimport \"./Sidebar.css\";\r\n// import material ui items\r\n\r\n// import shared/global items\r\n\r\n// import components/pages\r\n\r\n// import redux API\r\nimport { logout } from \"../../../redux/actions/auth\";\r\nimport StaffLinks from \"./Links/StaffLinks\";\r\nimport ValuerLinks from \"./Links/ValuerLinks\";\r\n\r\nconst Sidebar = (props) => {\r\n  const history = useHistory();\r\n  const { pathname } = useLocation();\r\n\r\n  const { logoutUser } = props;\r\n  const { loggedIn, profile_type } = props;\r\n\r\n  return (\r\n    <div className=\"left-navbar\" id=\"nav-bar\">\r\n      <nav className=\"nav\">\r\n        <Link to=\"\" className=\"nav__logo\">\r\n          <i className=\"bx bx-layer nav__logo-icon\"></i>\r\n          <span className=\"nav__logo-name\">AZW</span>\r\n        </Link>\r\n        <div className=\"nav__list\">\r\n          {/* unprotected links */}\r\n          <>\r\n            <Link\r\n              to=\"/\"\r\n              className={\r\n                `${pathname}` === \"/\" ? \"nav__link active\" : \"nav__link\"\r\n              }\r\n            >\r\n              <i class=\"bx bx-home\"></i>\r\n              <span className=\"nav__name\">Home</span>\r\n            </Link>\r\n          </>\r\n          {/* protected links */}\r\n          {loggedIn && (\r\n            <>\r\n              {/* STAFF LINKS */}\r\n              {profile_type === \"Staff\" && (\r\n                <StaffLinks pathname={pathname} Link={Link} />\r\n              )}\r\n              {/* VALUER LINKS */}\r\n              {[\"Staff\", \"Valuer\"].includes(profile_type) && (\r\n                <ValuerLinks pathname={pathname} Link={Link} />\r\n              )}\r\n              <Link\r\n                to=\"/dashboard/\"\r\n                className={\r\n                  `${pathname}` === \"/dashboard/\"\r\n                    ? \"nav__link active\"\r\n                    : \"nav__link\"\r\n                }\r\n              >\r\n                <i className=\"bx bx-grid-alt nav__icon\"></i>\r\n                <span className=\"nav__name\">Dashboard</span>\r\n              </Link>\r\n              <Link\r\n                to=\"/profile/\"\r\n                className={\r\n                  `${pathname}` === \"/profile/\"\r\n                    ? \"nav__link active\"\r\n                    : \"nav__link\"\r\n                }\r\n              >\r\n                <i class=\"bx bx-user nav__icon\"></i>\r\n                <span className=\"nav__name\">Profile</span>\r\n              </Link>\r\n              <Link\r\n                to=\"\"\r\n                className=\"nav__link\"\r\n                onClick={() => logoutUser(history)}\r\n              >\r\n                <i className=\"bx bx-log-out-circle\"></i>\r\n                <span className=\"nav__name\">Logout</span>\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.auth?.loggedIn,\r\n    profile_type: state.auth.user?.profile_type,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutUser: (history) => dispatch(logout(history)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n","import React from \"react\";\r\n\r\n// styles\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","// import installed packages\r\nimport { connect } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n// import styles\r\nimport \"./ActivateAccount.css\";\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { activate_account } from \"../../redux/actions/auth\";\r\n\r\n// import shared/global items\r\n\r\n// import components/pages\r\n\r\n// import redux API\r\nimport { START_LOADING } from \"../../redux/actions/types\";\r\n\r\nconst ActivateAccount = (props) => {\r\n  const { activation_token } = useParams();\r\n  const history = useHistory();\r\n  const { loading } = props; //get state from props\r\n  const { startLoading, activateUser } = props; //get dispatch actions from props\r\n\r\n  const handleActivate = () => {\r\n    // dispatch the loading action\r\n    startLoading();\r\n    activateUser(activation_token, history);\r\n  };\r\n\r\n  return (\r\n    <div className=\"activate__account\" id={loading ? \"formSubmitting\" : \"\"}>\r\n      <h1>Click on the button below to verify your account</h1>\r\n      {loading && (\r\n        <CircularProgress style={{ position: \"absolute\", marginLeft: \"1%\" }} />\r\n      )}\r\n      <button type=\"button\" onClick={handleActivate}>\r\n        Verify\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    activateUser: (activation_token, history) =>\r\n      dispatch(activate_account({ activation_token, history })),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivateAccount);\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n// import styles\r\nimport \"./ActivateAccount/ActivateAccount.css\";\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport globals from \"../shared/globals\";\r\nimport { ifEmpty, resetFormValues } from \"../shared/sharedFunctions\";\r\n\r\n// import components/pages\r\nimport MinDialog from \"../components/common/MinDialog\";\r\n\r\n// import redux API\r\nimport {\r\n  CLOSE_PASSWORD_RESET_CONFIRM,\r\n  OPEN_PASSWORD_RESET_CONFIRM,\r\n  START_LOADING,\r\n} from \"../redux/actions/types\";\r\nimport { setAlert } from \"../redux/actions/shared\";\r\nimport { set_password } from \"../redux/actions/auth\";\r\n\r\nconst ResetPasswordConfirm = (props) => {\r\n  const history = useHistory();\r\n  const { password_token } = useParams();\r\n  const { loading, alert, resetPasswordConfirmForm } = props; // extract state from props\r\n  const {\r\n    startLoading,\r\n    setNewPassword,\r\n    newAlert,\r\n    openNewPassword,\r\n    closeNewPassword,\r\n  } = props; // extract dispatch actions from props\r\n  const [newPasswords, setNewPasswords] = useState({\r\n    new_password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  // destructure values for better code formatting\r\n  // ########### start of destructuring #################  //\r\n  const { new_password, confirm_password } = newPasswords;\r\n  const { error } = globals;\r\n\r\n  // ########### end of destructuring #################  //\r\n\r\n  const resetForm = () => {\r\n    resetFormValues(newPasswords);\r\n  };\r\n\r\n  const closeNewPasswordForm = () => {\r\n    resetForm();\r\n    closeNewPassword();\r\n  };\r\n\r\n  // handle change\r\n  const handleChange = (e) =>\r\n    setNewPasswords({ ...newPasswords, [e.target.name]: e.target.value });\r\n\r\n  // function to submit new password\r\n  const handleSetNewPassword = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(newPasswords)) {\r\n      return newAlert(error, \"Both fields are required\");\r\n    }\r\n    startLoading();\r\n\r\n    // call the signup action creator\r\n    setNewPassword(newPasswords, password_token, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"activate__account\">\r\n        <h1>Click the button to set new password</h1>\r\n        <button type=\"button\" onClick={openNewPassword}>\r\n          Set New password\r\n        </button>\r\n      </div>\r\n      <MinDialog isOpen={resetPasswordConfirmForm}>\r\n        <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n          <h3>Enter new password</h3>\r\n          <p className={`response__message ${alert.alertType}`}>\r\n            {alert.status && alert.detail}\r\n          </p>\r\n          <div className=\"dialog__rowSingleItem\">\r\n            <label htmlFor=\"\">New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"new_password\"\r\n              onChange={handleChange}\r\n              value={new_password}\r\n            />\r\n          </div>\r\n          {loading && (\r\n            <CircularProgress\r\n              style={{ position: \"absolute\", marginLeft: \"43%\" }}\r\n            />\r\n          )}\r\n          <div className=\"dialog__rowSingleItem\">\r\n            <label htmlFor=\"\">Confirm New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirm_password\"\r\n              onChange={handleChange}\r\n              value={confirm_password}\r\n            />\r\n          </div>\r\n          <div className=\"form__Buttons\">\r\n            <button type=\"button\" onClick={closeNewPasswordForm}>\r\n              Close\r\n            </button>\r\n            <button type=\"submit\" onClick={handleSetNewPassword}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </MinDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    resetPasswordConfirmForm: state.auth?.resetPasswordConfirmForm,\r\n    alert: state.shared?.alert,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    setNewPassword: (newPasswords, password_token, history) =>\r\n      dispatch(set_password(newPasswords, password_token, history)),\r\n    openNewPassword: () => dispatch({ type: OPEN_PASSWORD_RESET_CONFIRM }),\r\n    closeNewPassword: () => dispatch({ type: CLOSE_PASSWORD_RESET_CONFIRM }),\r\n    newAlert: (type, detail) => dispatch(setAlert(type, detail)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResetPasswordConfirm);\r\n","// styles\r\nimport \"./NotFound.css\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"not__found\">\r\n      <h1 className=\"not__foundHeading\">404 resource not found</h1>\r\n      <p>Please try again.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport { ifEmpty, resetFormValues } from \"../../shared/sharedFunctions\";\r\nimport globals from \"../../shared/globals\";\r\n// import components/pages\r\nimport MinDialog from \"../common/MinDialog\";\r\n\r\n// import redux API\r\nimport {\r\n  CLOSE_CHANGE_PASSWORD,\r\n  START_LOADING,\r\n} from \"../../redux/actions/types\";\r\nimport { setAlert } from \"../../redux/actions/shared\";\r\nimport { change_password } from \"../../redux/actions/auth\";\r\n\r\nconst ChangePassword = (props) => {\r\n  const history = useHistory();\r\n  const { loading, alert, changePasswordForm, userId } = props; // extract state from props\r\n  const {\r\n    startLoading,\r\n    newAlert,\r\n    changeUserPassword,\r\n    closeChangePassword,\r\n  } = props; // extract dispatch actions from props\r\n\r\n  // internal state\r\n  const [passwords, setPasswords] = useState({\r\n    current_password: \"\",\r\n    new_password: \"\",\r\n    confirm_new_password: \"\",\r\n  });\r\n\r\n  //############### destructuring code ###################//\r\n  const { current_password, new_password, confirm_new_password } = passwords;\r\n  const { error } = globals;\r\n  //#################end of destructuring ###########//\r\n\r\n  const resetForm = () => {\r\n    resetFormValues(passwords);\r\n  };\r\n\r\n  const closeChangePasswordForm = () => {\r\n    resetForm();\r\n    closeChangePassword();\r\n  };\r\n\r\n  // handle change function\r\n  const handleChange = (e) => {\r\n    setPasswords({ ...passwords, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // function to handle password change\r\n  const handlePasswordChange = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(passwords)) {\r\n      return newAlert(error, \"All fields are required\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    changeUserPassword(passwords, userId, history, resetForm);\r\n  };\r\n  return (\r\n    <MinDialog isOpen={changePasswordForm}>\r\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n        <h3>Change your password here</h3>\r\n        <p className={`response__message ${alert?.alertType}`}>\r\n          {alert?.status && alert?.detail}\r\n        </p>\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Old Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"current_password\"\r\n            value={current_password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"new_password\"\r\n            value={new_password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Confirm New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirm_new_password\"\r\n            value={confirm_new_password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={closeChangePasswordForm}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={handlePasswordChange}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </MinDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    alert: state.shared?.alert,\r\n    changePasswordForm: state.auth?.changePasswordForm,\r\n    userId: state.auth.user?.id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    changeUserPassword: (passwords, userId, history, resetForm) =>\r\n      dispatch(change_password(passwords, userId, history, resetForm)),\r\n    closeChangePassword: () => dispatch({ type: CLOSE_CHANGE_PASSWORD }),\r\n    newAlert: (type, detail) => dispatch(setAlert(type, detail)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n","// import installed packages\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import styles\r\nimport \"./Profile.css\";\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport { ifEmpty } from \"../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport ChangePassword from \"../../components/users/ChangePassword\";\r\n// import redux API\r\nimport { OPEN_CHANGE_PASSWORD, START_LOADING } from \"../../redux/actions/types\";\r\nimport { update_user } from \"../../redux/actions/auth\";\r\n\r\nconst Profile = (props) => {\r\n  const { first_name, last_name, username, email, bio, userId, loading } =\r\n    props; // extract state from props\r\n  const { startLoading, updateUser, openChangePassword } = props; // extract dispatch actions from props\r\n  // internal state\r\n  const [updatedUser, setUpdatedUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    setUpdatedUser({\r\n      first_name,\r\n      last_name,\r\n      username,\r\n      email,\r\n      bio,\r\n    });\r\n  }, [first_name, last_name, email, username, bio]);\r\n\r\n  // function to update user details\r\n  const updateUserDetails = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(updatedUser)) {\r\n      alert(\"Fill all fields are to update your profile\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    updateUser(updatedUser, userId);\r\n  };\r\n\r\n  // handle change function\r\n  const handleChange = (e) => {\r\n    setUpdatedUser({ ...updatedUser, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile\" id={loading ? \"formSubmitting\" : \"\"}>\r\n      <h2>Profile Details</h2>\r\n      <div className=\"profile__row\">\r\n        <span>\r\n          <label htmlFor=\"\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            value={updatedUser.first_name}\r\n            onChange={handleChange}\r\n          />\r\n        </span>\r\n        <span>\r\n          <label htmlFor=\"\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            value={updatedUser.last_name}\r\n            onChange={handleChange}\r\n          />\r\n        </span>\r\n      </div>\r\n      {loading && (\r\n        <CircularProgress style={{ position: \"absolute\", marginLeft: \"30%\" }} />\r\n      )}\r\n      <div className=\"profile__row\">\r\n        <span>\r\n          <label htmlFor=\"\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={updatedUser.username}\r\n            onChange={handleChange}\r\n          />\r\n        </span>\r\n        <span>\r\n          <label htmlFor=\"\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={updatedUser.email}\r\n            onChange={handleChange}\r\n          />\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"profile__rowSingleItem\">\r\n        <label htmlFor=\"\">Bio</label>\r\n        <textarea name=\"bio\" value={updatedUser.bio} onChange={handleChange} />\r\n      </div>\r\n      <div className=\"profile__Buttons\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"change__password\"\r\n          onClick={openChangePassword}\r\n        >\r\n          Change Password\r\n        </button>\r\n        <button type=\"submit\" className=\"update\" onClick={updateUserDetails}>\r\n          Update Profile\r\n        </button>\r\n      </div>\r\n\r\n      {/* linked components */}\r\n      <ChangePassword />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    first_name: state.auth.user?.first_name,\r\n    last_name: state.auth.user?.last_name,\r\n    username: state.auth.user?.username,\r\n    email: state.auth.user?.email,\r\n    bio: state.auth.user?.bio,\r\n    userId: state.auth.user?.id,\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    updateUser: (updatedUser, userId) =>\r\n      dispatch(update_user(updatedUser, userId)),\r\n    openChangePassword: () => dispatch({ type: OPEN_CHANGE_PASSWORD }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","// import installed packages\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport { ifEmpty, resetFormValues } from \"../../../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport MediumDialog from \"../../../../components/common/MediumDialog\";\r\n\r\n// import redux API\r\nimport { add_new_title } from \"../../../../redux/actions/search\";\r\nimport { START_LOADING } from \"../../../../redux/actions/types\";\r\n\r\nconst AddTitle = (props) => {\r\n  const { openAddTitle, loading, userId } = props;\r\n  const { setOpenAddTitle, addNewTitle, startLoading } = props;\r\n  const [titleDetails, setTitleDetails] = useState({\r\n    title: \"\",\r\n    lat: \"\",\r\n    lon: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setTitleDetails({ ...titleDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    resetFormValues(titleDetails);\r\n  };\r\n  const handleClose = () => {\r\n    resetForm();\r\n    setOpenAddTitle(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(titleDetails)) {\r\n      return window.alert();\r\n    }\r\n    startLoading();\r\n    addNewTitle(userId, { ...titleDetails }, resetForm);\r\n  };\r\n\r\n  const { title, lat, lon } = titleDetails;\r\n\r\n  return (\r\n    <MediumDialog isOpen={openAddTitle} maxWidth=\"700px\">\r\n      <form\r\n        className=\"dialog\"\r\n        onSubmit={handleSubmit}\r\n        id={loading ? \"formSubmitting\" : \"\"}\r\n      >\r\n        <h3>Enter title details</h3>\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Title No:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            onChange={handleChange}\r\n            value={title}\r\n          />\r\n        </div>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"43%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Latitude</label>\r\n            <input type=\"text\" name=\"lat\" onChange={handleChange} value={lat} />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Longitude</label>\r\n            <input type=\"text\" name=\"lon\" onChange={handleChange} value={lon} />\r\n          </span>\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </MediumDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    userId: state.auth?.user?.id,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNewTitle: (userId, body, resetForm) =>\r\n      dispatch(add_new_title(userId, body, resetForm)),\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTitle);\r\n","import * as api from \"../../api\";\r\nimport * as actionTypes from \"./types\";\r\nimport { showError, stopLoading } from \"./shared\";\r\n\r\n// add a new title\r\nexport const add_new_title = (userId, body, resetForm) => async (dispatch) => {\r\n  await api\r\n    .addNewTitle(userId, body)\r\n    .then((res) => {\r\n      dispatch({ type: actionTypes.NEW_TITLE, payload: res.data?.new_title });\r\n      window.alert(res.data?.detail);\r\n      resetForm();\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n\r\n// get all titles for staff\r\nexport const get_all_titles = (userId) => async (dispatch) => {\r\n  await api\r\n    .getAllTitles(userId)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: actionTypes.SET_TITLES,\r\n        payload: res.data?.titles_data,\r\n      });\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n","// import installed packages\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import styles\r\n// import material ui items\r\n// import shared/global items\r\n// import components/pages\r\nimport AddTitle from \"./components/AddTitle\";\r\n// import redux API\r\nimport { get_all_titles } from \"../../../redux/actions/search\";\r\nimport { START_LOADING } from \"../../../redux/actions/types\";\r\n\r\nconst MaintainTitles = (props) => {\r\n  const { titlesList, userId, startLoading, getAllTitles } = props;\r\n  const [openAddTitle, setOpenAddTitle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (userId && titlesList?.length === 0) {\r\n      startLoading();\r\n      getAllTitles(userId);\r\n    }\r\n  }, [titlesList?.length, startLoading, getAllTitles, userId]);\r\n\r\n  const openAddTitleForm = () => {\r\n    setOpenAddTitle(true);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"table__parent\">\r\n        <div className=\"table__parentHeader\">\r\n          <h3>Maintain titles</h3>\r\n          <button\r\n            type=\"button\"\r\n            className=\"add__button\"\r\n            onClick={openAddTitleForm}\r\n          >\r\n            Add Title\r\n          </button>\r\n        </div>\r\n        <table className=\"table__listing\">\r\n          {titlesList?.length > 0 ? (\r\n            <>\r\n              <tr className=\"table__listingHeader\">\r\n                <th>Title No</th>\r\n                <th>Lat</th>\r\n                <th>Lon</th>\r\n              </tr>\r\n              {titlesList?.map((title) => (\r\n                <tr className=\"table__listingItem\" key={title?.id}>\r\n                  <td>{title?.title}</td>\r\n                  <td>{title?.lat}</td>\r\n                  <td>{title?.lon}</td>\r\n                </tr>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <h4 className=\"not__available\">No titles available</h4>\r\n          )}\r\n        </table>\r\n      </div>\r\n      {openAddTitle && (\r\n        <AddTitle\r\n          openAddTitle={openAddTitle}\r\n          setOpenAddTitle={setOpenAddTitle}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    titlesList: state.search?.titlesList,\r\n    userId: state.auth?.user?.id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllTitles: (userId) => dispatch(get_all_titles(userId)),\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MaintainTitles);\r\n","// import installed packages\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n// import styles\r\nimport \"./App.css\";\r\n// import material ui items\r\n\r\n// import shared/global items\r\nimport PrivateRoute from \"./shared/PrivateRoute\";\r\n// import components/pages\r\nimport Header from \"./components/common/Header/Header\";\r\n// import Footer from \"./components/common/Footer\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Sidebar from \"./components/common/Sidebar/Sidebar\";\r\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\r\nimport ActivateAccount from \"./pages/ActivateAccount/ActivateAccount\";\r\nimport ResetPasswordConfirm from \"./pages/ResetPasswordConfirm\";\r\nimport NotFound from \"./pages/NotFound/NotFound\";\r\nimport Profile from \"./pages/Profile/Profile\";\r\nimport MaintainTitles from \"./pages/Staff/MaintainTitles/MaintainTitles\";\r\n// import SearchTitle from \"./pages/Valuer/SearchTitle/SearchTitle\";\r\n// import redux API\r\nimport { get_user } from \"./redux/actions/auth\";\r\n\r\nfunction App(props) {\r\n  const session_cookie = localStorage.getItem(\"session_cookie\");\r\n\r\n  const { getUser } = props;\r\n  const { profile_type } = props;\r\n\r\n  useEffect(() => {\r\n    // get user on page refresh\r\n    if (session_cookie) {\r\n      getUser();\r\n    }\r\n  }, [getUser, session_cookie]);\r\n\r\n  return (\r\n    <div id=\"body-pd\">\r\n      <Router>\r\n        <Header />\r\n        <Sidebar />\r\n        <Switch>\r\n          {/* unauthenticated routes */}\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route\r\n            exact\r\n            path=\"/user/password-reset/:password_token/\"\r\n            component={ResetPasswordConfirm}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/user/activate/:activation_token/\"\r\n            component={ActivateAccount}\r\n          />\r\n          {/* authenticated routes */}\r\n          {profile_type === \"Staff\" && (\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/staff/maintain-titles/\"\r\n              component={MaintainTitles}\r\n            />\r\n          )}\r\n          {[\"Staff\", \"Valuer\"].includes(profile_type) && (\r\n            <>\r\n              {/* <PrivateRoute\r\n              exact\r\n              path=\"/valuer/search-title/\"\r\n              component={SearchTitle}\r\n            /> */}\r\n            </>\r\n          )}\r\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\r\n          <PrivateRoute exact path=\"/dashboard/\" component={Dashboard} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile_type: state.auth.user?.profile_type,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getUser: () => dispatch(get_user()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// types import\r\nimport * as actionTypes from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  signupForm: false,\r\n  loginForm: false,\r\n  loggedIn: false,\r\n  forgotPasswordForm: false,\r\n  resendActivationForm: false,\r\n  resetPasswordConfirmForm: false,\r\n  changePasswordForm: false,\r\n  user: {},\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionTypes.OPEN_SIGNUP:\r\n      return {\r\n        ...state,\r\n        signupForm: true,\r\n      };\r\n    case actionTypes.CLOSE_SIGNUP:\r\n      return {\r\n        ...state,\r\n        signupForm: false,\r\n      };\r\n    case actionTypes.OPEN_LOGIN:\r\n      return {\r\n        ...state,\r\n        loginForm: true,\r\n      };\r\n    case actionTypes.CLOSE_LOGIN:\r\n      return {\r\n        ...state,\r\n        loginForm: false,\r\n      };\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return { ...state, user: payload, loggedIn: true };\r\n    case actionTypes.OPEN_FORGOT_PASSWORD:\r\n      return {\r\n        ...state,\r\n        forgotPasswordForm: true,\r\n      };\r\n    case actionTypes.CLOSE_FORGOT_PASSWORD:\r\n      return {\r\n        ...state,\r\n        forgotPasswordForm: false,\r\n      };\r\n    case actionTypes.OPEN_RESEND_ACTIVATION:\r\n      return {\r\n        ...state,\r\n        resendActivationForm: true,\r\n      };\r\n    case actionTypes.CLOSE_RESEND_ACTIVATION:\r\n      return {\r\n        ...state,\r\n        resendActivationForm: false,\r\n      };\r\n    case actionTypes.OPEN_PASSWORD_RESET_CONFIRM:\r\n      return {\r\n        ...state,\r\n        resetPasswordConfirmForm: true,\r\n      };\r\n    case actionTypes.CLOSE_PASSWORD_RESET_CONFIRM:\r\n      return {\r\n        ...state,\r\n        resetPasswordConfirmForm: false,\r\n      };\r\n    case actionTypes.OPEN_CHANGE_PASSWORD:\r\n      return {\r\n        ...state,\r\n        changePasswordForm: true,\r\n      };\r\n    case actionTypes.CLOSE_CHANGE_PASSWORD:\r\n      return {\r\n        ...state,\r\n        changePasswordForm: false,\r\n      };\r\n    case actionTypes.LOGOUT:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import {\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  START_LOADING,\r\n  STOP_LOADING,\r\n} from \"../actions/types\";\r\n\r\nexport const sharedInitialState = {\r\n  alert: {\r\n    status: false,\r\n    alertType: \"\", // either success or error\r\n    detail: \"\",\r\n  },\r\n  loading: false,\r\n};\r\n\r\nconst sharedReducer = (state = sharedInitialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: payload,\r\n      };\r\n    case REMOVE_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: payload,\r\n      };\r\n    case START_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case STOP_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sharedReducer;\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/types\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  titlesList: [],\r\n};\r\n\r\n// add a new title\r\nconst addNewTitle = (state, payload) => {\r\n  return updateObject(state, {\r\n    titlesList: [...state.titlesList, payload],\r\n  });\r\n};\r\n\r\n// staff get all titles\r\nconst gettAllTitles = (state, payload) => {\r\n  return updateObject(state, {\r\n    titlesList: payload,\r\n  });\r\n};\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionTypes.NEW_TITLE:\r\n      return addNewTitle(state, payload);\r\n    case actionTypes.SET_TITLES:\r\n      return gettAllTitles(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport auth from \"./auth\";\r\nimport shared from \"./shared\";\r\nimport search from \"./search\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  shared,\r\n  search,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import axios from \"axios\";\r\nimport globals from \"./globals\";\r\n\r\nconst { liveProduction, testProduction, devHome, testHome, productionHome } =\r\n  globals;\r\n\r\nlet URL;\r\n\r\nif (testProduction) {\r\n  URL = testHome;\r\n} else if (liveProduction) {\r\n  URL = productionHome;\r\n} else {\r\n  URL = devHome;\r\n}\r\n\r\nconst API = axios.create({ baseURL: URL });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem(\"session_cookie\")) {\r\n    req.headers.Authorization = `Bearer ${localStorage.getItem(\r\n      \"session_cookie\"\r\n    )}`;\r\n    req.headers.Accept = \"application/json\";\r\n  }\r\n  return req;\r\n});\r\n\r\nexport default API;\r\n","export * from \"./postapi\";\r\nexport * from \"./patchapi\";\r\nexport * from \"./getapi\";\r\nexport * from \"./deleteapi\";\r\n","import API from \"../shared/axios\";\r\n// user routes\r\n\r\n// signup\r\nexport const signupUser = (newUser) => API.post(\"/api/user/signup/\", newUser);\r\n// activate user account\r\nexport const activateAccount = (activation_token) =>\r\n  API.post(\"/api/user/activate-user-account/\", { activation_token });\r\n\r\n// resend account activation email\r\nexport const resendActivation = (email) =>\r\n  API.post(\"/api/user/resend-account-activation-link/\", { email });\r\n\r\n// sign in user\r\nexport const signIn = (loginData) => API.post(\"/api/user/login/\", loginData);\r\n\r\n// send password reset email\r\nexport const resetPassword = (email) =>\r\n  API.post(\"/api/user/user-request-password-reset/\", { email });\r\n\r\n// set new password using reset link sent from above\r\nexport const setPassword = (newPasswords, password_token) =>\r\n  API.post(\"/api/user/user-set-new-password/\", {\r\n    ...newPasswords,\r\n    password_token,\r\n  });\r\n// user change password\r\nexport const changePassword = (passwords, userId) =>\r\n  API.post(`/api/user/change-user-password/${userId}/`, passwords);\r\n\r\n// API to add a new title\r\nexport const addNewTitle = (userId, body) =>\r\n  API.post(`/api/search/maintain-titles/${userId}/`, body);\r\n","import API from \"../shared/axios\";\r\n\r\n// patch user data\r\nexport const updateUser = (updatedUser, userId) =>\r\n  API.patch(`/api/user/update-user-details/${userId}/`, updatedUser);\r\n","import API from \"../shared/axios\";\r\n\r\n// get user data\r\nexport const getUser = () => API.get(\"/api/user/get-user-data/\");\r\n\r\n// get all titles\r\nexport const getAllTitles = (userId) =>\r\n  API.get(`/api/search/maintain-titles/${userId}/`);\r\n","const globals = {\r\n  success: \"success\",\r\n  error: \"error\",\r\n  fillFields: \"Please fill all fields\",\r\n  unknown_error: \"An unknown error occurred, please try again later\",\r\n  dev: false,\r\n  testProduction: false, // for use in heroku\r\n  liveProduction: true, // for patanjia.courzehub.com domain\r\n  devHome: \"http://localhost:8000\", // for local development\r\n  testHome: \"http://patanjia.herokuapp.com\", // for heroku production\r\n  productionHome: \"http://patanjia.courzehub.com\", // for live production\r\n};\r\nexport default globals;\r\n"],"sourceRoot":""}