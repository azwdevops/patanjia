{"version":3,"sources":["api/index.js","shared/globals.js","api/postapi.js","api/patchapi.js","api/getapi.js","shared/axios.js","shared/PrivateRoute.js","shared/scripts.js","shared/sharedFunctions.js","components/common/MinDialog.js","redux/actions/types.js","redux/actions/shared.js","redux/actions/auth.js","components/users/Login.js","components/common/MediumDialog.js","components/users/Signup.js","components/users/ForgotPassword.js","components/users/ReactivateAccount.js","components/common/Header/Header.js","pages/Valuer/SearchTitle/SearchTitle.js","pages/Home/Home.js","components/common/Sidebar/Links/StaffLinks.js","components/common/Sidebar/Links/ValuerLinks.js","components/common/Sidebar/Sidebar.js","pages/Dashboard/Dashboard.js","pages/ActivateAccount/ActivateAccount.js","pages/ResetPasswordConfirm.js","pages/NotFound/NotFound.js","components/users/ChangePassword.js","pages/Profile/Profile.js","pages/Staff/MaintainTitles/components/AddTitle.js","redux/actions/search.js","pages/Staff/MaintainTitles/MaintainTitles.js","App.js","reportWebVitals.js","redux/reducers/auth.js","redux/reducers/shared.js","redux/utility.js","redux/reducers/search.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["globals","success","error","fillFields","unknown_error","dev","liveProduction","devHome","productionHome","signupUser","newUser","API","post","activateAccount","activation_token","resendActivation","email","signIn","loginData","resetPassword","setPassword","newPasswords","password_token","changePassword","passwords","userId","addNewTitle","body","updateUser","updatedUser","patch","getUser","get","getAllTitles","URL","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","Accept","PrivateRoute","to","showNavbar","nav","document","getElementById","bodypd","classList","toggle","ifEmpty","object","i","resetFormValues","MinDialog","props","Dialog","open","isOpen","style","maxWidth","minWidth","margin","fullWidth","children","OPEN_SIGNUP","CLOSE_SIGNUP","OPEN_LOGIN","CLOSE_LOGIN","AUTH_SUCCESS","LOGOUT","OPEN_FORGOT_PASSWORD","CLOSE_FORGOT_PASSWORD","OPEN_RESEND_ACTIVATION","CLOSE_RESEND_ACTIVATION","OPEN_PASSWORD_RESET_CONFIRM","CLOSE_PASSWORD_RESET_CONFIRM","OPEN_CHANGE_PASSWORD","CLOSE_CHANGE_PASSWORD","START_LOADING","STOP_LOADING","NEW_TITLE","SET_TITLES","showError","err","response","status","window","alert","data","detail","stopLoading","dispatch","type","get_user","async","api","then","res","actionTypes","payload","user","catch","clear","logout","navigate","replace","connect","state","loading","shared","loginForm","auth","startLoading","loginUser","resetForm","setItem","access","finally","login","closeLogin","openPasswordReset","openSignup","openResendActivation","setLoginData","useState","password","handleChange","e","target","name","value","className","id","htmlFor","onChange","CircularProgress","position","marginLeft","onClick","preventDefault","justifySelf","MediumDialog","signupForm","closeSignup","signup_user","setNewUser","first_name","last_name","username","confirm_password","required","forgotPasswordForm","reset_password","closeForgotPassword","setEmail","trim","resendActivationForm","closeResendActivation","resend_activation","Header","useDispatch","useNavigate","session_cookie","useSelector","userImage","Avatar","alt","src","charAt","titleNumber","setTitleNumber","searchedTitle","setSearchedTitle","title","lat","lon","onSubmit","title_data","width","height","frameBorder","allowFullScreen","Home","StaffLinks","Link","pathname","ValuerLinks","loggedIn","profile_type","logoutUser","useLocation","class","includes","Dashboard","activateUser","history","useParams","resetPasswordConfirmForm","setNewPassword","set_password","openNewPassword","closeNewPassword","setNewPasswords","new_password","NotFound","changePasswordForm","changeUserPassword","change_password","closeChangePassword","setPasswords","current_password","confirm_new_password","bio","update_user","openChangePassword","setUpdatedUser","useEffect","new_title","add_new_title","openAddTitle","setOpenAddTitle","titleDetails","setTitleDetails","titlesList","search","titles_data","get_all_titles","length","map","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","action","sharedInitialState","sharedReducer","updateObject","oldObject","updatedProperties","gettAllTitles","searchReducer","combineReducers","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e0e68be4.chunk.js","sourcesContent":["export * from \"./postapi\";\r\nexport * from \"./patchapi\";\r\nexport * from \"./getapi\";\r\nexport * from \"./deleteapi\";\r\n","const globals = {\r\n  success: \"success\",\r\n  error: \"error\",\r\n  fillFields: \"Please fill all fields\",\r\n  unknown_error: \"An unknown error occurred, please try again later\",\r\n  dev: false,\r\n  liveProduction: true, // for patanjia.courzehub.com domain\r\n  devHome: \"http://localhost:8000\", // for local development\r\n  productionHome: \"http://patanjia.azwgroup.com\", // for live production\r\n};\r\nexport default globals;\r\n","import API from \"../shared/axios\";\r\n// user routes\r\n\r\n// signup\r\nexport const signupUser = (newUser) => API.post(\"/api/user/signup/\", newUser);\r\n// activate user account\r\nexport const activateAccount = (activation_token) =>\r\n  API.post(\"/api/user/activate-user-account/\", { activation_token });\r\n\r\n// resend account activation email\r\nexport const resendActivation = (email) =>\r\n  API.post(\"/api/user/resend-account-activation-link/\", { email });\r\n\r\n// sign in user\r\nexport const signIn = (loginData) => API.post(\"/api/user/login/\", loginData);\r\n\r\n// send password reset email\r\nexport const resetPassword = (email) =>\r\n  API.post(\"/api/user/user-request-password-reset/\", { email });\r\n\r\n// set new password using reset link sent from above\r\nexport const setPassword = (newPasswords, password_token) =>\r\n  API.post(\"/api/user/user-set-new-password/\", {\r\n    ...newPasswords,\r\n    password_token,\r\n  });\r\n// user change password\r\nexport const changePassword = (passwords, userId) =>\r\n  API.post(`/api/user/change-user-password/${userId}/`, passwords);\r\n\r\n// API to add a new title\r\nexport const addNewTitle = (userId, body) =>\r\n  API.post(`/api/search/maintain-titles/${userId}/`, body);\r\n","import API from \"../shared/axios\";\r\n\r\n// patch user data\r\nexport const updateUser = (updatedUser, userId) =>\r\n  API.patch(`/api/user/update-user-details/${userId}/`, updatedUser);\r\n","import API from \"../shared/axios\";\r\n\r\n// get user data\r\nexport const getUser = () => API.get(\"/api/user/get-user-data/\");\r\n\r\n// get all titles\r\nexport const getAllTitles = (userId) =>\r\n  API.get(`/api/search/maintain-titles/${userId}/`);\r\n","import axios from \"axios\";\r\nimport globals from \"./globals\";\r\n\r\nconst { liveProduction, devHome, productionHome } =\r\n  globals;\r\n\r\nlet URL;\r\n\r\nif (liveProduction) {\r\n  URL = productionHome;\r\n} else {\r\n  URL = devHome;\r\n}\r\n\r\nconst API = axios.create({ baseURL: URL });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem(\"session_cookie\")) {\r\n    req.headers.Authorization = `Bearer ${localStorage.getItem(\r\n      \"session_cookie\"\r\n    )}`;\r\n    req.headers.Accept = \"application/json\";\r\n  }\r\n  return req;\r\n});\r\n\r\nexport default API;\r\n","import React from \"react\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = () => {\r\n  return localStorage.getItem(\"session_cookie\") ? (\r\n    <Outlet />\r\n  ) : (\r\n    <Navigate to=\"/\" />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","// toggle sidebar on menu button click\r\nexport const showNavbar = () => {\r\n  // const toggle = document.getElementById(\"header-toggle\")\r\n  const nav = document.getElementById(\"nav-bar\"),\r\n    bodypd = document.getElementById(\"body-pd\");\r\n  // headerpd = document.getElementById(\"header\");\r\n\r\n  // show navbar\r\n  nav.classList.toggle(\"show\");\r\n\r\n  // change icon\r\n  // toggle.classList.toggle(\"bx-x\");\r\n\r\n  // add padding to body\r\n  bodypd.classList.toggle(\"body-pd\");\r\n\r\n  // add padding to header\r\n  //   headerpd.classList.toggle(\"body-pd\");\r\n};\r\n","// check if any field in an object is empty\r\nexport const ifEmpty = (object) => {\r\n  for (const i in object) {\r\n    if (`${object[i]}` === \"\") {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n// function to reset form values to blank\r\nexport const resetFormValues = (object) => {\r\n  for (const i in object) {\r\n    object[i] = \"\";\r\n  }\r\n};\r\n\r\n// function to get max date to display on user entry form\r\nexport const maxDate = () => {\r\n  const today = new Date();\r\n  const day = today.getDate() < 10 ? \"0\" + today.getDate() : today.getDate();\r\n  const month =\r\n    today.getMonth() + 1 < 10\r\n      ? \"0\" + (today.getMonth() + 1)\r\n      : today.getMonth() + 1;\r\n  const max_date = today.getFullYear() + \"-\" + month + \"-\" + day;\r\n  return max_date;\r\n};\r\n\r\n// function to get min date to display on exam date\r\nexport const minDate = () => {\r\n  const today = new Date();\r\n  const day = today.getDate() < 10 ? \"0\" + today.getDate() : today.getDate();\r\n  const month =\r\n    today.getMonth() + 1 < 10\r\n      ? \"0\" + (today.getMonth() + 1)\r\n      : today.getMonth() + 1;\r\n  const min_date = today.getFullYear() + \"-\" + month + \"-\" + day;\r\n  return min_date;\r\n};\r\n","// material ui items\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst MinDialog = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      style={{ maxWidth: \"500px\", minWidth: \"\", margin: \"0 auto\" }}\r\n      fullWidth\r\n    >\r\n      {props.children}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MinDialog;\r\n","// user types\r\nexport const OPEN_SIGNUP = \"OPEN_SIGNUP\";\r\nexport const CLOSE_SIGNUP = \"CLOSE_SIGNUP\";\r\nexport const OPEN_LOGIN = \"OPEN_LOGIN\";\r\nexport const CLOSE_LOGIN = \"CLOSE_LOGIN\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const OPEN_FORGOT_PASSWORD = \"OPEN_FORGOT_PASSWORD\";\r\nexport const CLOSE_FORGOT_PASSWORD = \"CLOSE_FORGOT_PASSWORD\";\r\nexport const OPEN_RESEND_ACTIVATION = \"OPEN_RESEND_ACTIVATION\";\r\nexport const CLOSE_RESEND_ACTIVATION = \"CLOSE_RESEND_ACTIVATION\";\r\nexport const OPEN_PASSWORD_RESET_CONFIRM = \"OPEN_PASSWORD_RESET_CONFIRM\";\r\nexport const CLOSE_PASSWORD_RESET_CONFIRM = \"CLOSE_PASSWORD_RESET_CONFIRM\";\r\nexport const OPEN_CHANGE_PASSWORD = \"OPEN_CHANGE_PASSWORD\";\r\nexport const CLOSE_CHANGE_PASSWORD = \"CLOSE_CHANGE_PASSWORD\";\r\n\r\n// shared types\r\nexport const START_LOADING = \"START_LOADING\";\r\nexport const STOP_LOADING = \"STOP_LOADING\";\r\n\r\n// title types\r\nexport const NEW_TITLE = \"NEW_TITLE\";\r\nexport const SET_TITLES = \"SET_TITLES\";\r\n","import { STOP_LOADING } from \"./types\";\r\n\r\n\r\n// START OF reusable functions\r\n// show error function\r\nexport const showError = (err) => {\r\n  if (\r\n    err?.response?.status === 400 ||\r\n    err?.response?.status === 401 ||\r\n    err?.response?.status === 403\r\n  ) {\r\n    window.alert(err?.response?.data?.detail);\r\n  } else {\r\n    window.alert(\"An unknown error occurred\");\r\n  }\r\n};\r\nexport const stopLoading = (dispatch) => {\r\n  dispatch({ type: STOP_LOADING });\r\n};\r\n","// axios items\r\nimport * as api from \"../../api/index\";\r\n\r\n// redux API items\r\n\r\nimport * as actionTypes from \"../actions/types\";\r\nimport {showError, stopLoading} from './shared'\r\n// shared items\r\nimport globals from \"../../shared/globals\";\r\n\r\nconst { error, success, unknown_error } = globals;\r\n\r\n// sign up user\r\nexport const signup_user = (newUser, resetForm) => async (dispatch) => {\r\n  await api\r\n    .signupUser(newUser)\r\n    .then((res) => {\r\n      window.alert(res.data?.detail);\r\n      resetForm();\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n\r\n// activate user account\r\nexport const activate_account = (body) => async (dispatch) => {\r\n  const { activation_token, navigate } = body;\r\n  await api\r\n    .activateAccount(activation_token)\r\n    .then((res) => {\r\n      alert(res.data?.detail);\r\n      dispatch({ type: actionTypes.OPEN_LOGIN });\r\n    })\r\n    .catch((err) => {\r\n      if (err.response.status === 400) {\r\n        alert(err.response.data?.detail);\r\n        // if token has expired or is invalid, open this form for user to request a new token\r\n        dispatch({ type: actionTypes.OPEN_RESEND_ACTIVATION });\r\n      } else {\r\n        alert(unknown_error);\r\n      }\r\n    })\r\n    .finally(() => {\r\n      dispatch({ type: actionTypes.STOP_LOADING });\r\n      navigate(\"/\", {replace:true});\r\n    });\r\n};\r\n\r\n// resend user account activation link\r\nexport const resend_activation = (email, resetForm) => async (dispatch) => {\r\n  await api\r\n    .resendActivation(email)\r\n    .then((res) => {\r\n      window.alert(res?.data?.detail)\r\n      resetForm();\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n\r\n// login user\r\nexport const login = (loginData, resetForm) => async (dispatch) => {\r\n  await api\r\n    .signIn(loginData)\r\n    .then((res) => {\r\n      localStorage.setItem(\"session_cookie\", res.data?.access);\r\n      resetForm();\r\n      // dispatch success message\r\n      dispatch({ type: actionTypes.CLOSE_LOGIN });\r\n      // get user details\r\n      dispatch(get_user());\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n\r\n// reset user password by sending an email with a reset link\r\nexport const reset_password = (email, resetForm) => async (dispatch) => {\r\n  await api\r\n    .resetPassword(email)\r\n    .then((res) => {\r\n      window.alert(res.data?.detail)\r\n      resetForm();\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n\r\n// set new user password\r\nexport const set_password =\r\n  (newPasswords, password_token, navigate) => async (dispatch) => {\r\n    await api\r\n      .setPassword(newPasswords, password_token)\r\n      .then((res) => {\r\n        alert(res.data?.detail);\r\n        dispatch({ type: actionTypes.CLOSE_PASSWORD_RESET_CONFIRM });\r\n        navigate(\"/\", {replace:true});\r\n        dispatch({ type: actionTypes.OPEN_LOGIN });\r\n      })\r\n      .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n  };\r\n\r\n// patch/update user data\r\nexport const update_user = (updatedUser, userId) => async (dispatch) => {\r\n  await api\r\n    .updateUser(updatedUser, userId)\r\n    .then((res) => {\r\n      dispatch({ type: actionTypes.AUTH_SUCCESS, payload: res.data?.user });\r\n      alert(res.data?.detail);\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n\r\n// user change password\r\nexport const change_password =\r\n  (passwords, userId, navigate) => async (dispatch) => {\r\n    await api\r\n      .changePassword(passwords, userId)\r\n      .then((res) => {\r\n        alert(success, res.data?.detail);\r\n        dispatch({ type: actionTypes.CLOSE_CHANGE_PASSWORD });\r\n        dispatch(logout(navigate));\r\n        dispatch({ type: actionTypes.OPEN_LOGIN });\r\n      })\r\n      .catch((err) => showError(err))\r\n      .finally(() => stopLoading(dispatch));\r\n  };\r\n\r\n// get user data\r\nexport const get_user = () => async (dispatch) => {\r\n  await api\r\n    .getUser()\r\n    .then((res) => {\r\n      dispatch({ type: actionTypes.AUTH_SUCCESS, payload: res.data?.user });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({ type: actionTypes.LOGOUT });\r\n      localStorage.clear();\r\n    });\r\n};\r\n\r\n// logout user\r\nexport const logout = (navigate) => async (dispatch) => {\r\n  localStorage.clear();\r\n  dispatch({ type: actionTypes.LOGOUT });\r\n  navigate(\"/\", {replace:true});\r\n};\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\nimport { ifEmpty, resetFormValues } from \"../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport MinDialog from \"../common/MinDialog\";\r\n\r\n// import redux API\r\nimport {\r\n  CLOSE_LOGIN,\r\n  OPEN_FORGOT_PASSWORD,\r\n  OPEN_RESEND_ACTIVATION,\r\n  OPEN_SIGNUP,\r\n  START_LOADING,\r\n} from \"../../redux/actions/types\";\r\nimport { login } from \"../../redux/actions/auth\";\r\n\r\nconst Login = (props) => {\r\n  const { loading, loginForm } = props; // extract state from props\r\n  const {\r\n    startLoading,\r\n    loginUser,\r\n    closeLogin,\r\n    openPasswordReset,\r\n    openSignup,\r\n    openResendActivation,\r\n  } = props; // extract dispatch action from props\r\n  const [loginData, setLoginData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  // destructuring\r\n  const { error } = globals;\r\n  const { email, password } = loginData;\r\n\r\n  // reset form values\r\n  const resetForm = () => {\r\n    resetFormValues(loginData);\r\n  };\r\n\r\n  // function to close login form\r\n  const closeLoginForm = () => {\r\n    closeLogin();\r\n    resetForm();\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(loginData)) {\r\n      return window.alert(\"Email and password required\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    loginUser(loginData, resetForm);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setLoginData({ ...loginData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // open password reset form\r\n  const openPasswordResetForm = () => {\r\n    openPasswordReset();\r\n    closeLogin();\r\n  };\r\n\r\n  //open sign up form\r\n  const openSignupForm = () => {\r\n    openSignup();\r\n    closeLogin();\r\n  };\r\n  // open resend activation\r\n  const openResendActivationForm = () => {\r\n    openResendActivation();\r\n    closeLogin();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MinDialog isOpen={loginForm}>\r\n        <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n          <h3>Login here</h3>\r\n          <div className=\"dialog__rowSingleItem\">\r\n            <label htmlFor=\"\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              value={email}\r\n            />\r\n          </div>\r\n          {loading && (\r\n            <CircularProgress\r\n              style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n            />\r\n          )}\r\n          <div className=\"dialog__rowSingleItem\">\r\n            <label htmlFor=\"\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              value={password}\r\n            />\r\n          </div>\r\n          <div className=\"form__Buttons\">\r\n            <button type=\"button\" onClick={closeLoginForm}>\r\n              Close\r\n            </button>\r\n            <button type=\"submit\" onClick={handleLogin}>\r\n              Login\r\n            </button>\r\n          </div>\r\n          <div className=\"extra__formButtons\">\r\n            <label\r\n              htmlFor=\"\"\r\n              className=\"button\"\r\n              onClick={openPasswordResetForm}\r\n            >\r\n              Forgot Password\r\n            </label>\r\n            <label\r\n              htmlFor=\"\"\r\n              className=\"button\"\r\n              style={{ justifySelf: \"end\" }}\r\n              onClick={openSignupForm}\r\n            >\r\n              Create Account\r\n            </label>\r\n          </div>\r\n          <div className=\"extra__formButtons\">\r\n            <label\r\n              htmlFor=\"\"\r\n              className=\"button\"\r\n              onClick={openResendActivationForm}\r\n            >\r\n              Resend Activation\r\n            </label>\r\n          </div>\r\n        </form>\r\n      </MinDialog>\r\n      {/* components */}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    loginForm: state.auth.loginForm,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    loginUser: (loginData, resetForm) => dispatch(login(loginData, resetForm)),\r\n    closeLogin: () => dispatch({ type: CLOSE_LOGIN }),\r\n    openPasswordReset: () => dispatch({ type: OPEN_FORGOT_PASSWORD }),\r\n    openSignup: () => dispatch({ type: OPEN_SIGNUP }),\r\n    openResendActivation: () => dispatch({ type: OPEN_RESEND_ACTIVATION }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","// material ui items\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nconst MediumDialog = (props) => {\r\n  return (\r\n    <Dialog\r\n      open={props.isOpen}\r\n      maxWidth=\"md\"\r\n      style={{ maxWidth: props?.maxWidth, margin: \"auto\" }}\r\n      fullWidth\r\n    >\r\n      {props.children}\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MediumDialog;\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\nimport { ifEmpty, resetFormValues } from \"../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport MediumDialog from \"../common/MediumDialog\";\r\n// import redux API\r\nimport { CLOSE_SIGNUP, START_LOADING } from \"../../redux/actions/types\";\r\nimport { signup_user } from \"../../redux/actions/auth\";\r\n\r\nconst Signup = (props) => {\r\n  const { loading, signupForm } = props; // get state from props\r\n  const { startLoading, closeSignup, signupUser } = props; // get dispatch actions from props\r\n\r\n  // internal state\r\n  const [newUser, setNewUser] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  //############### destructuring code ###################//\r\n  const { first_name, last_name, username, email, password, confirm_password } =\r\n    newUser;\r\n  const { error, fillFields } = globals;\r\n\r\n  //#################end of destructuring ###########//\r\n\r\n  const resetForm = () => {\r\n    resetFormValues(newUser);\r\n  };\r\n\r\n  const closeSignupForm = () => {\r\n    closeSignup();\r\n    resetForm();\r\n  };\r\n\r\n  const handleSignup = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(newUser)) {\r\n      return window.alert(fillFields);\r\n    }\r\n    // confirm passwords match\r\n    if (password !== confirm_password) {\r\n      return window.alert(\"Passwords should match\");\r\n    }\r\n\r\n    // dispatch the loading action\r\n    startLoading();\r\n\r\n    // call the signup action creator\r\n    signupUser(newUser, resetForm);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setNewUser({ ...newUser, [e.target.name]: e.target.value });\r\n  };\r\n  return (\r\n    <MediumDialog isOpen={signupForm}>\r\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n        <h3>Create new account</h3>\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"first_name\"\r\n              value={first_name}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"last_name\"\r\n              value={last_name}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n        </div>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"43%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              username={email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Confirm Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirm_password\"\r\n              value={confirm_password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </span>\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={closeSignupForm}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={handleSignup}>\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n        <div className=\"extra__formButtons\"></div>\r\n      </form>\r\n    </MediumDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    signupForm: state.auth.signupForm,\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    closeSignup: () => dispatch({ type: CLOSE_SIGNUP }),\r\n    signupUser: (newUser, resetForm) =>\r\n      dispatch(signup_user(newUser, resetForm)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\n\r\n// import components/pages\r\nimport MinDialog from \"../common/MinDialog\";\r\n\r\n// import redux API\r\nimport {\r\n  CLOSE_FORGOT_PASSWORD,\r\n  START_LOADING,\r\n} from \"../../redux/actions/types\";\r\nimport { reset_password } from \"../../redux/actions/auth\";\r\n\r\nconst ForgotPassword = (props) => {\r\n  const { loading, forgotPasswordForm } = props; // extract state from props\r\n  const { startLoading, resetPassword, closeForgotPassword } = props; // extract dispatch actions from props\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  //############### destructuring code ###################//\r\n  const { error } = globals;\r\n\r\n  //#################end of destructuring ###########//\r\n\r\n  const resetForm = () => {\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const closeForgotPasswordForm = () => {\r\n    closeForgotPassword();\r\n    resetForm();\r\n  };\r\n\r\n  // function to reset password (send reset password email)\r\n\r\n  const sendPasswordResetEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (email.trim() === \"\") {\r\n      return window.alert(\"Email required\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    resetPassword(email, resetForm);\r\n  };\r\n\r\n  return (\r\n    <MinDialog isOpen={forgotPasswordForm}>\r\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n        <h3>Enter your email to reset password</h3>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={closeForgotPasswordForm}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={sendPasswordResetEmail}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </MinDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    forgotPasswordForm: state.auth?.forgotPasswordForm,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    resetPassword: (email, resetForm) =>\r\n      dispatch(reset_password(email, resetForm)),\r\n    closeForgotPassword: () => dispatch({ type: CLOSE_FORGOT_PASSWORD }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport globals from \"../../shared/globals\";\r\n// import components/pages\r\nimport MinDialog from \"../common/MinDialog\";\r\n\r\n// import redux API\r\n\r\nimport {\r\n  CLOSE_RESEND_ACTIVATION,\r\n  START_LOADING,\r\n} from \"../../redux/actions/types\";\r\nimport { resend_activation } from \"../../redux/actions/auth\";\r\n\r\nconst ReactivateAccount = (props) => {\r\n  const { loading, resendActivationForm } = props; // extract state from props\r\n  const { startLoading, closeResendActivation, resendActivation } = props; // extract dispatch actions from props\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  // ###################### destructuring to make code organized ######################### //\r\n  const { error } = globals;\r\n  // ###################### end destructuring to make code organized ######################### //\r\n\r\n  const resetForm = () => {\r\n    setEmail(\"\");\r\n  };\r\n\r\n  const closeResendActivationForm = () => {\r\n    closeResendActivation();\r\n    resetForm();\r\n  };\r\n\r\n  // function to resend confirmation link\r\n  const resendAccountConfirmationLink = (e) => {\r\n    e.preventDefault();\r\n    if (email.trim() === \"\") {\r\n      return window.alert(\"Email required\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    resendActivation(email, resetForm);\r\n  };\r\n\r\n  return (\r\n    <MinDialog\r\n      isOpen={resendActivationForm} // since the styles of min width applied globally is affecting the reactivate form width, apply inline styles\r\n    >\r\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n        <h3>Enter email to resend confirmation link</h3>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={closeResendActivationForm}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={resendAccountConfirmationLink}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </MinDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    resendActivationForm: state.auth?.resendActivationForm,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    closeResendActivation: () => dispatch({ type: CLOSE_RESEND_ACTIVATION }),\r\n    resendActivation: (email, resetForm) =>\r\n      dispatch(resend_activation(email, resetForm)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReactivateAccount);\r\n","// import installed packages\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n// import styles\r\n\r\nimport \"./Header.scss\";\r\n// import material ui items\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n// import shared/global items\r\nimport { showNavbar } from \"../../../shared/scripts\";\r\n// import components/pages\r\nimport Login from \"../../users/Login\";\r\nimport Signup from \"../../users/Signup\";\r\nimport ForgotPassword from \"../../users/ForgotPassword\";\r\nimport ReactivateAccount from \"../../users/ReactivateAccount\";\r\n\r\n// import redux API\r\nimport { OPEN_LOGIN, OPEN_SIGNUP } from \"../../../redux/actions/types\";\r\nimport { logout } from \"../../../redux/actions/auth\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const session_cookie = localStorage.getItem(\"session_cookie\");\r\n  const username = useSelector((state) => state.auth.user?.username);\r\n  const userImage = useSelector((state) => state.auth?.userImage);\r\n\r\n  // console.log(location.pathname);\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\" id=\"header\">\r\n        <div className=\"header__toggle\">\r\n          <i className=\"bx bx-menu\" id=\"header-toggle\" onClick={showNavbar}></i>\r\n          <h1>\r\n            <Link to=\"/\">Pata Njia</Link>\r\n          </h1>\r\n        </div>\r\n\r\n        {session_cookie ? (\r\n          <div className=\"header__right authenticated\">\r\n            <>\r\n              <div>\r\n                <Avatar alt={username} src={userImage} className=\"user__image\">\r\n                  {username?.charAt(0)}\r\n                </Avatar>\r\n                <h6>{username}</h6>\r\n                <i className=\"bx bx-caret-down\"></i>\r\n              </div>\r\n              <ul className=\"dropdown\">\r\n                <li>\r\n                  <Link to=\"/dashboard/\">Dashboard</Link>\r\n                </li>\r\n                <li onClick={() => dispatch(logout(navigate))}>Logout</li>\r\n              </ul>\r\n            </>\r\n          </div>\r\n        ) : (\r\n          <div className=\"header__right\">\r\n            <span\r\n              className=\"button\"\r\n              onClick={() => dispatch({ type: OPEN_LOGIN })}\r\n            >\r\n              Login\r\n            </span>\r\n            <span\r\n              className=\"button\"\r\n              onClick={() => dispatch({ type: OPEN_SIGNUP })}\r\n            >\r\n              Signup\r\n            </span>\r\n          </div>\r\n        )}\r\n      </header>\r\n      {/* components */}\r\n      <Login />\r\n      <Signup />\r\n      <ForgotPassword />\r\n      <ReactivateAccount />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// import installed packages\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\nimport \"./SearchTitle.scss\";\r\n// import material ui items\r\nimport CirculaProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport API from \"../../../shared/axios\";\r\n// import components/pages\r\n// import redux API\r\nimport { START_LOADING, STOP_LOADING } from \"../../../redux/actions/types\";\r\nimport { showError } from \"../../../redux/actions/shared\";\r\n\r\nconst SearchTitle = (props) => {\r\n  const { startLoading, loading, userId, stopLoading } = props;\r\n  const [titleNumber, setTitleNumber] = useState(\"\");\r\n  const [searchedTitle, setSearchedTitle] = useState({\r\n    title: \"\",\r\n    lat: \"\",\r\n    lon: \"\",\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (titleNumber.trim() === \"\") {\r\n      return window.alert(\"Input valid title number\");\r\n    }\r\n    startLoading();\r\n    await API.post(`/api/search/valuer-get-title/${userId}/`, { titleNumber })\r\n      .then((res) => {\r\n        setSearchedTitle(res.data?.title_data);\r\n      })\r\n      .catch((err) => showError(err))\r\n      .finally(() => stopLoading());\r\n  };\r\n\r\n  return (\r\n    <div className=\"table__parent\" id={loading ? \"pageSubmitting\" : \"\"}>\r\n      <div className=\"table__parentHeader\">\r\n        <h3>Enter title number</h3>\r\n        {loading && <CirculaProgress style={{ position: \"absolute\" }} />}\r\n        <br />\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"\"\r\n            className=\"search__input\"\r\n            onChange={(e) => setTitleNumber(e.target.value)}\r\n            value={titleNumber}\r\n          />\r\n          <br />\r\n          <button type=\"submit\" className=\"add__button search__button\">\r\n            Search\r\n          </button>\r\n        </form>\r\n        <br />\r\n        {searchedTitle?.title !== \"\" && (\r\n          <>\r\n            <iframe\r\n              title={searchedTitle?.title}\r\n              src={`https://maps.google.com/maps?q=${searchedTitle?.lat}, ${searchedTitle?.lon}&z=15&output=embed`}\r\n              width=\"1000\"\r\n              height=\"500\"\r\n              frameBorder=\"0\"\r\n              className=\"map__iframe\"\r\n              allowFullScreen\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: state.auth?.user?.id,\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    stopLoading: () => dispatch({ type: STOP_LOADING }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchTitle);\r\n","import SearchTitle from \"../Valuer/SearchTitle/SearchTitle\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <SearchTitle />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","// import installed packages\r\n// import styles\r\n\r\n// import material ui items\r\n\r\n// import shared/global items\r\n\r\n// import components/pages\r\n\r\n// import redux API\r\n\r\nconst StaffLinks = ({ Link, pathname }) => {\r\n  return (\r\n    <>\r\n      <Link\r\n        to=\"/staff/maintain-titles/\"\r\n        className={\r\n          `${pathname}` === \"/staff/maintain-titles/\"\r\n            ? \"nav__link active\"\r\n            : \"nav__link\"\r\n        }\r\n      >\r\n        <i className=\"bx bxs-landscape\"></i>\r\n        <span className=\"nav__name\">Titles</span>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffLinks;\r\n","// import installed packages\r\n// import styles\r\n\r\n// import material ui items\r\n\r\n// import shared/global items\r\n\r\n// import components/pages\r\n\r\n// import redux API\r\n\r\nconst ValuerLinks = ({ Link, pathname }) => {\r\n  return (\r\n    <>\r\n      {/* <Link\r\n        to=\"/valuer/search-title/\"\r\n        className={\r\n          `${pathname}` === \"/valuer/search-title/\"\r\n            ? \"nav__link active\"\r\n            : \"nav__link\"\r\n        }\r\n      >\r\n        <i className=\"bx bx-search\"></i>\r\n        <span className=\"nav__name\">Search</span>\r\n      </Link> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ValuerLinks;\r\n","// import installed packages\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import styles\r\nimport \"./Sidebar.scss\";\r\n// import material ui items\r\n\r\n// import shared/global items\r\n\r\n// import components/pages\r\n\r\n// import redux API\r\nimport { logout } from \"../../../redux/actions/auth\";\r\nimport StaffLinks from \"./Links/StaffLinks\";\r\nimport ValuerLinks from \"./Links/ValuerLinks\";\r\n\r\nconst Sidebar = (props) => {\r\n  const navigate = useNavigate();\r\n  const { pathname } = useLocation();\r\n\r\n  const { logoutUser } = props;\r\n  const { loggedIn, profile_type } = props;\r\n\r\n  return (\r\n    <div className=\"left-navbar\" id=\"nav-bar\">\r\n      <nav className=\"nav\">\r\n        <Link to=\"\" className=\"nav__logo\">\r\n          <i className=\"bx bx-layer nav__logo-icon\"></i>\r\n          <span className=\"nav__logo-name\">AZW</span>\r\n        </Link>\r\n        <div className=\"nav__list\">\r\n          {/* unprotected links */}\r\n          <>\r\n            <Link\r\n              to=\"/\"\r\n              className={\r\n                `${pathname}` === \"/\" ? \"nav__link active\" : \"nav__link\"\r\n              }\r\n            >\r\n              <i class=\"bx bx-home\"></i>\r\n              <span className=\"nav__name\">Home</span>\r\n            </Link>\r\n          </>\r\n          {/* protected links */}\r\n          {loggedIn && (\r\n            <>\r\n              {/* STAFF LINKS */}\r\n              {profile_type === \"Staff\" && (\r\n                <StaffLinks pathname={pathname} Link={Link} />\r\n              )}\r\n              {/* VALUER LINKS */}\r\n              {[\"Staff\", \"Valuer\"].includes(profile_type) && (\r\n                <ValuerLinks pathname={pathname} Link={Link} />\r\n              )}\r\n              <Link\r\n                to=\"/dashboard/\"\r\n                className={\r\n                  `${pathname}` === \"/dashboard/\"\r\n                    ? \"nav__link active\"\r\n                    : \"nav__link\"\r\n                }\r\n              >\r\n                <i className=\"bx bx-grid-alt nav__icon\"></i>\r\n                <span className=\"nav__name\">Dashboard</span>\r\n              </Link>\r\n              <Link\r\n                to=\"/profile/\"\r\n                className={\r\n                  `${pathname}` === \"/profile/\"\r\n                    ? \"nav__link active\"\r\n                    : \"nav__link\"\r\n                }\r\n              >\r\n                <i class=\"bx bx-user nav__icon\"></i>\r\n                <span className=\"nav__name\">Profile</span>\r\n              </Link>\r\n              <Link\r\n                to=\"\"\r\n                className=\"nav__link\"\r\n                onClick={() => logoutUser(navigate)}\r\n              >\r\n                <i className=\"bx bx-log-out-circle\"></i>\r\n                <span className=\"nav__name\">Logout</span>\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loggedIn: state.auth?.loggedIn,\r\n    profile_type: state.auth.user?.profile_type,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logoutUser: (navigate) => dispatch(logout(navigate)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\r\n","import React from \"react\";\r\n\r\n// styles\r\nimport \"./Dashboard.scss\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","// import installed packages\r\nimport { connect } from \"react-redux\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n// import styles\r\nimport \"./ActivateAccount.scss\";\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { activate_account } from \"../../redux/actions/auth\";\r\n\r\n// import shared/global items\r\n\r\n// import components/pages\r\n\r\n// import redux API\r\nimport { START_LOADING } from \"../../redux/actions/types\";\r\n\r\nconst ActivateAccount = (props) => {\r\n  const { activation_token } = useParams();\r\n  const navigate = useNavigate();\r\n  const { loading } = props; //get state from props\r\n  const { startLoading, activateUser } = props; //get dispatch actions from props\r\n\r\n  const handleActivate = () => {\r\n    // dispatch the loading action\r\n    startLoading();\r\n    activateUser(activation_token, navigate);\r\n  };\r\n\r\n  return (\r\n    <div className=\"activate__account\" id={loading ? \"formSubmitting\" : \"\"}>\r\n      <h1>Click on the button below to verify your account</h1>\r\n      {loading && (\r\n        <CircularProgress style={{ position: \"absolute\", marginLeft: \"1%\" }} />\r\n      )}\r\n      <button type=\"button\" onClick={handleActivate}>\r\n        Verify\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    activateUser: (activation_token, history) =>\r\n      dispatch(activate_account({ activation_token, history })),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivateAccount);\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n// import styles\r\nimport \"./ActivateAccount/ActivateAccount.scss\";\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport { ifEmpty, resetFormValues } from \"../shared/sharedFunctions\";\r\n\r\n// import components/pages\r\nimport MinDialog from \"../components/common/MinDialog\";\r\n\r\n// import redux API\r\nimport {\r\n  CLOSE_PASSWORD_RESET_CONFIRM,\r\n  OPEN_PASSWORD_RESET_CONFIRM,\r\n  START_LOADING,\r\n} from \"../redux/actions/types\";\r\nimport { set_password } from \"../redux/actions/auth\";\r\n\r\nconst ResetPasswordConfirm = (props) => {\r\n  const navigate = useNavigate();\r\n  const { password_token } = useParams();\r\n  const { loading, resetPasswordConfirmForm } = props; // extract state from props\r\n  const { startLoading, setNewPassword, openNewPassword, closeNewPassword } =\r\n    props; // extract dispatch actions from props\r\n  const [newPasswords, setNewPasswords] = useState({\r\n    new_password: \"\",\r\n    confirm_password: \"\",\r\n  });\r\n\r\n  // destructure values for better code formatting\r\n  // ########### start of destructuring #################  //\r\n  const { new_password, confirm_password } = newPasswords;\r\n\r\n  // ########### end of destructuring #################  //\r\n\r\n  const resetForm = () => {\r\n    resetFormValues(newPasswords);\r\n  };\r\n\r\n  const closeNewPasswordForm = () => {\r\n    resetForm();\r\n    closeNewPassword();\r\n  };\r\n\r\n  // handle change\r\n  const handleChange = (e) =>\r\n    setNewPasswords({ ...newPasswords, [e.target.name]: e.target.value });\r\n\r\n  // function to submit new password\r\n  const handleSetNewPassword = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(newPasswords)) {\r\n      return window.alert(\"Both fields are required\");\r\n    }\r\n    startLoading();\r\n\r\n    // call the signup action creator\r\n    setNewPassword(newPasswords, password_token, navigate);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"activate__account\">\r\n        <h1>Click the button to set new password</h1>\r\n        <button type=\"button\" onClick={openNewPassword}>\r\n          Set New password\r\n        </button>\r\n      </div>\r\n      <MinDialog isOpen={resetPasswordConfirmForm}>\r\n        <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n          <h3>Enter new password</h3>\r\n          <div className=\"dialog__rowSingleItem\">\r\n            <label htmlFor=\"\">New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"new_password\"\r\n              onChange={handleChange}\r\n              value={new_password}\r\n            />\r\n          </div>\r\n          {loading && (\r\n            <CircularProgress\r\n              style={{ position: \"absolute\", marginLeft: \"43%\" }}\r\n            />\r\n          )}\r\n          <div className=\"dialog__rowSingleItem\">\r\n            <label htmlFor=\"\">Confirm New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirm_password\"\r\n              onChange={handleChange}\r\n              value={confirm_password}\r\n            />\r\n          </div>\r\n          <div className=\"form__Buttons\">\r\n            <button type=\"button\" onClick={closeNewPasswordForm}>\r\n              Close\r\n            </button>\r\n            <button type=\"submit\" onClick={handleSetNewPassword}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </MinDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    resetPasswordConfirmForm: state.auth?.resetPasswordConfirmForm,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    setNewPassword: (newPasswords, password_token, history) =>\r\n      dispatch(set_password(newPasswords, password_token, history)),\r\n    openNewPassword: () => dispatch({ type: OPEN_PASSWORD_RESET_CONFIRM }),\r\n    closeNewPassword: () => dispatch({ type: CLOSE_PASSWORD_RESET_CONFIRM }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResetPasswordConfirm);\r\n","// styles\r\nimport \"./NotFound.scss\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"not__found\">\r\n      <h1 className=\"not__foundHeading\">404 resource not found</h1>\r\n      <p>Please try again.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","// import installed packages\r\nimport { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import styles\r\n\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport { ifEmpty, resetFormValues } from \"../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport MinDialog from \"../common/MinDialog\";\r\n\r\n// import redux API\r\nimport {\r\n  CLOSE_CHANGE_PASSWORD,\r\n  START_LOADING,\r\n} from \"../../redux/actions/types\";\r\nimport { change_password } from \"../../redux/actions/auth\";\r\n\r\nconst ChangePassword = (props) => {\r\n  const navigate = useNavigate();\r\n  const { loading, changePasswordForm, userId } = props; // extract state from props\r\n  const { startLoading, changeUserPassword, closeChangePassword } = props; // extract dispatch actions from props\r\n\r\n  // internal state\r\n  const [passwords, setPasswords] = useState({\r\n    current_password: \"\",\r\n    new_password: \"\",\r\n    confirm_new_password: \"\",\r\n  });\r\n\r\n  //############### destructuring code ###################//\r\n  const { current_password, new_password, confirm_new_password } = passwords;\r\n  //#################end of destructuring ###########//\r\n\r\n  const resetForm = () => {\r\n    resetFormValues(passwords);\r\n  };\r\n\r\n  const closeChangePasswordForm = () => {\r\n    resetForm();\r\n    closeChangePassword();\r\n  };\r\n\r\n  // handle change function\r\n  const handleChange = (e) => {\r\n    setPasswords({ ...passwords, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // function to handle password change\r\n  const handlePasswordChange = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(passwords)) {\r\n      return window.alert(\"All fields are required\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    changeUserPassword(passwords, userId, navigate, resetForm);\r\n  };\r\n  return (\r\n    <MinDialog isOpen={changePasswordForm}>\r\n      <form className=\"dialog\" id={loading ? \"formSubmitting\" : \"\"}>\r\n        <h3>Change your password here</h3>\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Old Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"current_password\"\r\n            value={current_password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"40%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"new_password\"\r\n            value={new_password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Confirm New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirm_new_password\"\r\n            value={confirm_new_password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={closeChangePasswordForm}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\" onClick={handlePasswordChange}>\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </MinDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    changePasswordForm: state.auth?.changePasswordForm,\r\n    userId: state.auth.user?.id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    changeUserPassword: (passwords, userId, history, resetForm) =>\r\n      dispatch(change_password(passwords, userId, history, resetForm)),\r\n    closeChangePassword: () => dispatch({ type: CLOSE_CHANGE_PASSWORD }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n","// import installed packages\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import styles\r\nimport \"./Profile.scss\";\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport { ifEmpty } from \"../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport ChangePassword from \"../../components/users/ChangePassword\";\r\n// import redux API\r\nimport { OPEN_CHANGE_PASSWORD, START_LOADING } from \"../../redux/actions/types\";\r\nimport { update_user } from \"../../redux/actions/auth\";\r\n\r\nconst Profile = (props) => {\r\n  const { first_name, last_name, username, email, bio, userId, loading } =\r\n    props; // extract state from props\r\n  const { startLoading, updateUser, openChangePassword } = props; // extract dispatch actions from props\r\n  // internal state\r\n  const [updatedUser, setUpdatedUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    setUpdatedUser({\r\n      first_name,\r\n      last_name,\r\n      username,\r\n      email,\r\n      bio,\r\n    });\r\n  }, [first_name, last_name, email, username, bio]);\r\n\r\n  // function to update user details\r\n  const updateUserDetails = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(updatedUser)) {\r\n      alert(\"Fill all fields are to update your profile\");\r\n    }\r\n    startLoading();\r\n    // call the signup action creator\r\n    updateUser(updatedUser, userId);\r\n  };\r\n\r\n  // handle change function\r\n  const handleChange = (e) => {\r\n    setUpdatedUser({ ...updatedUser, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile\" id={loading ? \"formSubmitting\" : \"\"}>\r\n      <h2>Profile Details</h2>\r\n      <div className=\"profile__row\">\r\n        <span>\r\n          <label htmlFor=\"\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            value={updatedUser.first_name}\r\n            onChange={handleChange}\r\n          />\r\n        </span>\r\n        <span>\r\n          <label htmlFor=\"\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            value={updatedUser.last_name}\r\n            onChange={handleChange}\r\n          />\r\n        </span>\r\n      </div>\r\n      {loading && (\r\n        <CircularProgress style={{ position: \"absolute\", marginLeft: \"30%\" }} />\r\n      )}\r\n      <div className=\"profile__row\">\r\n        <span>\r\n          <label htmlFor=\"\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={updatedUser.username}\r\n            onChange={handleChange}\r\n          />\r\n        </span>\r\n        <span>\r\n          <label htmlFor=\"\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={updatedUser.email}\r\n            onChange={handleChange}\r\n          />\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"profile__rowSingleItem\">\r\n        <label htmlFor=\"\">Bio</label>\r\n        <textarea name=\"bio\" value={updatedUser.bio} onChange={handleChange} />\r\n      </div>\r\n      <div className=\"profile__Buttons\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"change__password\"\r\n          onClick={openChangePassword}\r\n        >\r\n          Change Password\r\n        </button>\r\n        <button type=\"submit\" className=\"update\" onClick={updateUserDetails}>\r\n          Update Profile\r\n        </button>\r\n      </div>\r\n\r\n      {/* linked components */}\r\n      <ChangePassword />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    first_name: state.auth.user?.first_name,\r\n    last_name: state.auth.user?.last_name,\r\n    username: state.auth.user?.username,\r\n    email: state.auth.user?.email,\r\n    bio: state.auth.user?.bio,\r\n    userId: state.auth.user?.id,\r\n    loading: state.shared?.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n    updateUser: (updatedUser, userId) =>\r\n      dispatch(update_user(updatedUser, userId)),\r\n    openChangePassword: () => dispatch({ type: OPEN_CHANGE_PASSWORD }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","// import installed packages\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import styles\r\n// import material ui items\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n// import shared/global items\r\nimport { ifEmpty, resetFormValues } from \"../../../../shared/sharedFunctions\";\r\n// import components/pages\r\nimport MediumDialog from \"../../../../components/common/MediumDialog\";\r\n\r\n// import redux API\r\nimport { add_new_title } from \"../../../../redux/actions/search\";\r\nimport { START_LOADING } from \"../../../../redux/actions/types\";\r\n\r\nconst AddTitle = (props) => {\r\n  const { openAddTitle, loading, userId } = props;\r\n  const { setOpenAddTitle, addNewTitle, startLoading } = props;\r\n  const [titleDetails, setTitleDetails] = useState({\r\n    title: \"\",\r\n    lat: \"\",\r\n    lon: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setTitleDetails({ ...titleDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    resetFormValues(titleDetails);\r\n  };\r\n  const handleClose = () => {\r\n    resetForm();\r\n    setOpenAddTitle(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (ifEmpty(titleDetails)) {\r\n      return window.alert();\r\n    }\r\n    startLoading();\r\n    addNewTitle(userId, { ...titleDetails }, resetForm);\r\n  };\r\n\r\n  const { title, lat, lon } = titleDetails;\r\n\r\n  return (\r\n    <MediumDialog isOpen={openAddTitle} maxWidth=\"700px\">\r\n      <form\r\n        className=\"dialog\"\r\n        onSubmit={handleSubmit}\r\n        id={loading ? \"formSubmitting\" : \"\"}\r\n      >\r\n        <h3>Enter title details</h3>\r\n        <div className=\"dialog__rowSingleItem\">\r\n          <label htmlFor=\"\">Title No:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            onChange={handleChange}\r\n            value={title}\r\n          />\r\n        </div>\r\n        {loading && (\r\n          <CircularProgress\r\n            style={{ position: \"absolute\", marginLeft: \"43%\" }}\r\n          />\r\n        )}\r\n        <div className=\"dialog__row\">\r\n          <span>\r\n            <label htmlFor=\"\">Latitude</label>\r\n            <input type=\"text\" name=\"lat\" onChange={handleChange} value={lat} />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"\">Longitude</label>\r\n            <input type=\"text\" name=\"lon\" onChange={handleChange} value={lon} />\r\n          </span>\r\n        </div>\r\n        <div className=\"form__Buttons\">\r\n          <button type=\"button\" onClick={handleClose}>\r\n            Close\r\n          </button>\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </MediumDialog>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loading: state.shared?.loading,\r\n    userId: state.auth?.user?.id,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addNewTitle: (userId, body, resetForm) =>\r\n      dispatch(add_new_title(userId, body, resetForm)),\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTitle);\r\n","import * as api from \"../../api\";\r\nimport * as actionTypes from \"./types\";\r\nimport { showError, stopLoading } from \"./shared\";\r\n\r\n// add a new title\r\nexport const add_new_title = (userId, body, resetForm) => async (dispatch) => {\r\n  await api\r\n    .addNewTitle(userId, body)\r\n    .then((res) => {\r\n      dispatch({ type: actionTypes.NEW_TITLE, payload: res.data?.new_title });\r\n      window.alert(res.data?.detail);\r\n      resetForm();\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n\r\n// get all titles for staff\r\nexport const get_all_titles = (userId) => async (dispatch) => {\r\n  await api\r\n    .getAllTitles(userId)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: actionTypes.SET_TITLES,\r\n        payload: res.data?.titles_data,\r\n      });\r\n    })\r\n    .catch((err) => showError(err))\r\n    .finally(() => stopLoading(dispatch));\r\n};\r\n","// import installed packages\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import styles\r\n// import material ui items\r\n// import shared/global items\r\n// import components/pages\r\nimport AddTitle from \"./components/AddTitle\";\r\n// import redux API\r\nimport { get_all_titles } from \"../../../redux/actions/search\";\r\nimport { START_LOADING } from \"../../../redux/actions/types\";\r\n\r\nconst MaintainTitles = (props) => {\r\n  const { titlesList, userId, startLoading, getAllTitles } = props;\r\n  const [openAddTitle, setOpenAddTitle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (userId && titlesList?.length === 0) {\r\n      startLoading();\r\n      getAllTitles(userId);\r\n    }\r\n  }, [titlesList?.length, startLoading, getAllTitles, userId]);\r\n\r\n  const openAddTitleForm = () => {\r\n    setOpenAddTitle(true);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"table__parent\">\r\n        <div className=\"table__parentHeader\">\r\n          <h3>Maintain titles</h3>\r\n          <button\r\n            type=\"button\"\r\n            className=\"add__button\"\r\n            onClick={openAddTitleForm}\r\n          >\r\n            Add Title\r\n          </button>\r\n        </div>\r\n        <table className=\"table__listing\">\r\n          {titlesList?.length > 0 ? (\r\n            <>\r\n              <tr className=\"table__listingHeader\">\r\n                <th>Title No</th>\r\n                <th>Lat</th>\r\n                <th>Lon</th>\r\n              </tr>\r\n              {titlesList?.map((title) => (\r\n                <tr className=\"table__listingItem\" key={title?.id}>\r\n                  <td>{title?.title}</td>\r\n                  <td>{title?.lat}</td>\r\n                  <td>{title?.lon}</td>\r\n                </tr>\r\n              ))}\r\n            </>\r\n          ) : (\r\n            <h4 className=\"not__available\">No titles available</h4>\r\n          )}\r\n        </table>\r\n      </div>\r\n      {openAddTitle && (\r\n        <AddTitle\r\n          openAddTitle={openAddTitle}\r\n          setOpenAddTitle={setOpenAddTitle}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    titlesList: state.search?.titlesList,\r\n    userId: state.auth?.user?.id,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllTitles: (userId) => dispatch(get_all_titles(userId)),\r\n    startLoading: () => dispatch({ type: START_LOADING }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MaintainTitles);\r\n","// import installed packages\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\n\r\n// import styles\r\nimport \"./App.scss\";\r\n// import material ui items\r\n\r\n// import shared/global items\r\nimport PrivateRoute from \"./shared/PrivateRoute\";\r\n// import components/pages\r\nimport Header from \"./components/common/Header/Header\";\r\n// import Footer from \"./components/common/Footer\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Sidebar from \"./components/common/Sidebar/Sidebar\";\r\nimport Dashboard from \"./pages/Dashboard/Dashboard\";\r\nimport ActivateAccount from \"./pages/ActivateAccount/ActivateAccount\";\r\nimport ResetPasswordConfirm from \"./pages/ResetPasswordConfirm\";\r\nimport NotFound from \"./pages/NotFound/NotFound\";\r\nimport Profile from \"./pages/Profile/Profile\";\r\nimport MaintainTitles from \"./pages/Staff/MaintainTitles/MaintainTitles\";\r\n// import SearchTitle from \"./pages/Valuer/SearchTitle/SearchTitle\";\r\n// import redux API\r\nimport { get_user } from \"./redux/actions/auth\";\r\n\r\nfunction App(props) {\r\n  const session_cookie = localStorage.getItem(\"session_cookie\");\r\n\r\n  const { getUser } = props;\r\n  const { profile_type } = props;\r\n\r\n  useEffect(() => {\r\n    // get user on page refresh\r\n    if (session_cookie) {\r\n      getUser();\r\n    }\r\n  }, [getUser, session_cookie]);\r\n\r\n  return (\r\n    <div id=\"body-pd\">\r\n      <Router>\r\n        <Header />\r\n        <Sidebar />\r\n        <Routes>\r\n          {/* unauthenticated routes */}\r\n          <Route exact path=\"/\" element={<Home />} />\r\n          <Route\r\n            exact\r\n            path=\"/user/password-reset/:password_token/\"\r\n            element={<ResetPasswordConfirm />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/user/activate/:activation_token/\"\r\n            element={<ActivateAccount />}\r\n          />\r\n          {/* authenticated routes */}\r\n          <Route exact path=\"/\" element={<PrivateRoute />}>\r\n            {profile_type === \"Staff\" && (\r\n              <Route\r\n                exact\r\n                path=\"/staff/maintain-titles/\"\r\n                element={<MaintainTitles />}\r\n              />\r\n            )}\r\n            {[\"Staff\", \"Valuer\"].includes(profile_type) && (\r\n              <>\r\n                {/* <Route\r\n              exact\r\n              path=\"/valuer/search-title/\"\r\n              element={<SearchTitle />}\r\n            /> */}\r\n              </>\r\n            )}\r\n            <Route exact path=\"/profile\" element={<Profile />} />\r\n            <Route exact path=\"/dashboard/\" element={<Dashboard />} />\r\n          </Route>\r\n          <Route element={<NotFound />} />\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profile_type: state.auth.user?.profile_type,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getUser: () => dispatch(get_user()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// types import\r\nimport * as actionTypes from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  signupForm: false,\r\n  loginForm: false,\r\n  loggedIn: false,\r\n  forgotPasswordForm: false,\r\n  resendActivationForm: false,\r\n  resetPasswordConfirmForm: false,\r\n  changePasswordForm: false,\r\n  user: {},\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionTypes.OPEN_SIGNUP:\r\n      return {\r\n        ...state,\r\n        signupForm: true,\r\n      };\r\n    case actionTypes.CLOSE_SIGNUP:\r\n      return {\r\n        ...state,\r\n        signupForm: false,\r\n      };\r\n    case actionTypes.OPEN_LOGIN:\r\n      return {\r\n        ...state,\r\n        loginForm: true,\r\n      };\r\n    case actionTypes.CLOSE_LOGIN:\r\n      return {\r\n        ...state,\r\n        loginForm: false,\r\n      };\r\n    case actionTypes.AUTH_SUCCESS:\r\n      return { ...state, user: payload, loggedIn: true };\r\n    case actionTypes.OPEN_FORGOT_PASSWORD:\r\n      return {\r\n        ...state,\r\n        forgotPasswordForm: true,\r\n      };\r\n    case actionTypes.CLOSE_FORGOT_PASSWORD:\r\n      return {\r\n        ...state,\r\n        forgotPasswordForm: false,\r\n      };\r\n    case actionTypes.OPEN_RESEND_ACTIVATION:\r\n      return {\r\n        ...state,\r\n        resendActivationForm: true,\r\n      };\r\n    case actionTypes.CLOSE_RESEND_ACTIVATION:\r\n      return {\r\n        ...state,\r\n        resendActivationForm: false,\r\n      };\r\n    case actionTypes.OPEN_PASSWORD_RESET_CONFIRM:\r\n      return {\r\n        ...state,\r\n        resetPasswordConfirmForm: true,\r\n      };\r\n    case actionTypes.CLOSE_PASSWORD_RESET_CONFIRM:\r\n      return {\r\n        ...state,\r\n        resetPasswordConfirmForm: false,\r\n      };\r\n    case actionTypes.OPEN_CHANGE_PASSWORD:\r\n      return {\r\n        ...state,\r\n        changePasswordForm: true,\r\n      };\r\n    case actionTypes.CLOSE_CHANGE_PASSWORD:\r\n      return {\r\n        ...state,\r\n        changePasswordForm: false,\r\n      };\r\n    case actionTypes.LOGOUT:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import {\r\n  START_LOADING,\r\n  STOP_LOADING,\r\n} from \"../actions/types\";\r\n\r\nexport const sharedInitialState = {\r\n  loading: false,\r\n};\r\n\r\nconst sharedReducer = (state = sharedInitialState, action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case START_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case STOP_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sharedReducer;\r\n","export const updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties,\r\n  };\r\n};\r\n","import * as actionTypes from \"../actions/types\";\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n  titlesList: [],\r\n};\r\n\r\n// add a new title\r\nconst addNewTitle = (state, payload) => {\r\n  return updateObject(state, {\r\n    titlesList: [...state.titlesList, payload],\r\n  });\r\n};\r\n\r\n// staff get all titles\r\nconst gettAllTitles = (state, payload) => {\r\n  return updateObject(state, {\r\n    titlesList: payload,\r\n  });\r\n};\r\n\r\nconst searchReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case actionTypes.NEW_TITLE:\r\n      return addNewTitle(state, payload);\r\n    case actionTypes.SET_TITLES:\r\n      return gettAllTitles(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport auth from \"./auth\";\r\nimport shared from \"./shared\";\r\nimport search from \"./search\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  shared,\r\n  search,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}